webpackJsonp([0],{629:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=o(729),r=function(e){return e&&e.__esModule?e:{default:e}}(t);n.default=r.default},647:function(e,n,o){n=e.exports=o(3)(),n.push([e.i,"\nh2[data-v-35da2094]{\n  font-size: 24px;\n  color:#333;\n  font-weight: 400;\n}\np[data-v-35da2094]{\n  font-size: 16px;\n  color:#666\n}\n.codeInput textarea[data-v-35da2094]{\n  background-color: #f9fafc;\n  border-radius: 0;\n}\n.demo[data-v-35da2094]{\n  margin-bottom: 0 !important;\n  padding: 30px;\n  border: 1px solid #eaeefb;\n}\n.demo-area.hover[data-v-35da2094]{\n  box-shadow: 0 0 8px 0 rgba(232,237,250,.6), 0 2px 4px 0 rgba(232,237,250,.5);\n}\n.expand_area[data-v-35da2094] {\n  border-width: 0 1px;\n  border-style: solid;\n  border-color: #eaeefb;\n  background-color: #faf9fc;\n  border-bottom: 1px solid #eaeefb;\n  margin-bottom: 0 !important;\n}\n.expend[data-v-35da2094]{\n  border: 1px solid #eaeefb;\n  border-top: none;\n  text-align: center;\n  font-size: 14px;\n  padding: 10px;\n  color: #ccc;\n  cursor: pointer;\n}\n.demo-area.hover .expend[data-v-35da2094]{\n  color: #999;\n}\n.expend .ky-icon-arrow-down[data-v-35da2094]{\n  margin-right: 7px;\n  transition: .3s transform;\n}\n.demo-area.hover .expend[data-v-35da2094]:hover{\n  color: #20a0ff !important;\n  background-color: #f9fafc;\n}\n","",{version:3,sources:["/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/codeBox/src/main.vue?77744bfe"],names:[],mappings:";AAmDA;EACA,gBAAA;EACA,WAAA;EACA,iBAAA;CACA;AACA;EACA,gBAAA;EACA,UAAA;CACA;AACA;EACA,0BAAA;EACA,iBAAA;CACA;AACA;EACA,4BAAA;EACA,cAAA;EACA,0BAAA;CACA;AAEA;EACA,6EAAA;CACA;AAEA;EACA,oBAAA;EACA,oBAAA;EACA,sBAAA;EACA,0BAAA;EACA,iCAAA;EACA,4BAAA;CACA;AAEA;EACA,0BAAA;EACA,iBAAA;EACA,mBAAA;EACA,gBAAA;EACA,cAAA;EACA,YAAA;EACA,gBAAA;CACA;AACA;EACA,YAAA;CACA;AACA;EACA,kBAAA;EACA,0BAAA;CACA;AAEA;EACA,0BAAA;EACA,0BAAA;CACA",file:"main.vue",sourcesContent:['<template>\n  <div>\n    \x3c!--标题 s--\x3e\n    <h2>{{title}}</h2>\n    \x3c!--描述 s--\x3e\n    <p>{{description}}</p>\n    \x3c!--效果展示 s--\x3e\n    <div class="demo-area" @mouseenter="hover = true" @mouseleave="hover = false" :class="[hover && \'hover\']">\n      <ky-row class="demo">\n        <slot></slot>\n      </ky-row>\n      \x3c!--代码展示 s--\x3e\n      <ky-row v-if="isExpend" class="expand_area">\n        \x3c!--代码 s--\x3e\n        <ky-col :span="16" style="border-right: 1px solid #eaeefb;padding: 0 10px">\n          <pre style="overflow: auto;font-size: 15px;font-family: Menlo,Monaco,Consolas,Courier,monospace; line-height: 24px;color: #5e6d82">{{code}}</pre>\n        </ky-col>\n        \x3c!--解释 s--\x3e\n        <ky-col :span="8" style="font-size: 14px;padding: 10px;line-height: 24px;color: #5e6d82">\n          {{codeExplain}}\n        </ky-col>\n      </ky-row>\n      \x3c!--展开收起 s--\x3e\n      <ky-row class="expend">\n        <div @click="doExpend"><i class="ky-icon-arrow-down" :style="{transform : isExpend ? \'rotate(-180deg)\' : \'\'}"></i>{{isExpend ? \'收起代码\' : \'展开代码\'}}</div>\n      </ky-row>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    props:[\n      \'title\',\n      \'description\',\n      \'code\',\n      \'codeExplain\'\n    ],\n    data(){\n      return{\n        isExpend:false,\n        hover: false\n      }\n    },\n    methods: {\n      doExpend: function () {\n        this.isExpend = !this.isExpend\n      }\n    }\n  }\n<\/script>\n<style scoped>\n  h2{\n    font-size: 24px;\n    color:#333;\n    font-weight: 400;\n  }\n  p{\n    font-size: 16px;\n    color:#666\n  }\n  .codeInput textarea{\n    background-color: #f9fafc;\n    border-radius: 0;\n  }\n  .demo{\n    margin-bottom: 0 !important;\n    padding: 30px;\n    border: 1px solid #eaeefb;\n  }\n\n  .demo-area.hover{\n    box-shadow: 0 0 8px 0 rgba(232,237,250,.6), 0 2px 4px 0 rgba(232,237,250,.5);\n  }\n\n  .expand_area {\n    border-width: 0 1px;\n    border-style: solid;\n    border-color: #eaeefb;\n    background-color: #faf9fc;\n    border-bottom: 1px solid #eaeefb;\n    margin-bottom: 0 !important;\n  }\n\n  .expend{\n    border: 1px solid #eaeefb;\n    border-top: none;\n    text-align: center;\n    font-size: 14px;\n    padding: 10px;\n    color: #ccc;\n    cursor: pointer;\n  }\n  .demo-area.hover .expend{\n    color: #999;\n  }\n  .expend .ky-icon-arrow-down{\n    margin-right: 7px;\n    transition: .3s transform;\n  }\n\n  .demo-area.hover .expend:hover{\n    color: #20a0ff !important;\n    background-color: #f9fafc;\n  }\n</style>\n'],sourceRoot:""}])},648:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=o(650),r=function(e){return e&&e.__esModule?e:{default:e}}(t);n.default=r.default},649:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:["title","description","code","codeExplain"],data:function(){return{isExpend:!1,hover:!1}},methods:{doExpend:function(){this.isExpend=!this.isExpend}}}},650:function(e,n,o){o(652);var t=o(2)(o(649),o(651),"data-v-35da2094",null);t.options.__file="/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/codeBox/src/main.vue",t.esModule&&Object.keys(t.esModule).some(function(e){return"default"!==e&&"__esModule"!==e})&&console.error("named exports are not supported in *.vue files."),t.options.functional&&console.error("[vue-loader] main.vue: functional components are not supported with templates, they should use render functions."),function(){var n=o(0);n.install(o(1),!1),n.compatible&&(e.hot.accept(),e.hot.data?n.reload("data-v-35da2094",t.options):n.createRecord("data-v-35da2094",t.options))}(),e.exports=t.exports},651:function(e,n,o){e.exports={render:function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",[o("h2",[e._v(e._s(e.title))]),e._v(" "),o("p",[e._v(e._s(e.description))]),e._v(" "),o("div",{staticClass:"demo-area",class:[e.hover&&"hover"],on:{mouseenter:function(n){e.hover=!0},mouseleave:function(n){e.hover=!1}}},[o("ky-row",{staticClass:"demo"},[e._t("default")],2),e._v(" "),e.isExpend?o("ky-row",{staticClass:"expand_area"},[o("ky-col",{staticStyle:{"border-right":"1px solid #eaeefb",padding:"0 10px"},attrs:{span:16}},[o("pre",{staticStyle:{overflow:"auto","font-size":"15px","font-family":"Menlo,Monaco,Consolas,Courier,monospace","line-height":"24px",color:"#5e6d82"}},[e._v(e._s(e.code))])]),e._v(" "),o("ky-col",{staticStyle:{"font-size":"14px",padding:"10px","line-height":"24px",color:"#5e6d82"},attrs:{span:8}},[e._v("\n        "+e._s(e.codeExplain)+"\n      ")])],1):e._e(),e._v(" "),o("ky-row",{staticClass:"expend"},[o("div",{on:{click:e.doExpend}},[o("i",{staticClass:"ky-icon-arrow-down",style:{transform:e.isExpend?"rotate(-180deg)":""}}),e._v(e._s(e.isExpend?"收起代码":"展开代码"))])])],1)])},staticRenderFns:[]},e.exports.render._withStripped=!0,e.hot.accept(),e.hot.data&&o(0).rerender("data-v-35da2094",e.exports)},652:function(e,n,o){var t=o(647);"string"==typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var r=o(4)("09990345",t,!1);t.locals||e.hot.accept(647,function(){var n=o(647);"string"==typeof n&&(n=[[e.i,n,""]]),r(n)}),e.hot.dispose(function(){r()})},653:function(e,n,o){n=e.exports=o(3)(),n.push([e.i,"\nh2[data-v-b7699058]{\n  font-size: 24px;\n  color:#333\n}\np[data-v-b7699058]{\n  font-size: 16px;\n  color:#666\n}\n.content-box[data-v-b7699058]{\n  white-space: pre-wrap;\n  margin: 10px 0px;\n}\n.content-box div[data-v-b7699058]{\n  line-height: 1.6;\n  font-size: 14px;\n  background-color: rgb(245, 245, 246);\n  border: 1px solid #cdced3;\n  padding: 18px 24px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n}\n","",{version:3,sources:["/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/textBox/src/main.vue?f37d7c16"],names:[],mappings:";AAsBA;EACA,gBAAA;EACA,UAAA;CACA;AAEA;EACA,gBAAA;EACA,UAAA;CACA;AAEA;EACA,sBAAA;EACA,iBAAA;CACA;AAEA;EACA,iBAAA;EACA,gBAAA;EACA,qCAAA;EACA,0BAAA;EACA,mBAAA;EACA,oBAAA;EAGA,mBAAA;CACA",file:"main.vue",sourcesContent:["<template>\n  <div>\n    \x3c!--标题 s--\x3e\n    <h2>{{titleName}}</h2>\n    \x3c!--介绍 s--\x3e\n    <p>{{introduce}}</p>\n    \x3c!--内容 s--\x3e\n    <div class=\"content-box\">\n      <div>{{content}}</div>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    props:[\n      'titleName',\n      'introduce',\n      'content',\n    ]\n  }\n<\/script>\n<style scoped>\n  h2{\n    font-size: 24px;\n    color:#333\n  }\n\n  p{\n    font-size: 16px;\n    color:#666\n  }\n\n  .content-box{\n    white-space: pre-wrap;\n    margin: 10px 0px;\n  }\n\n  .content-box div{\n    line-height: 1.6;\n    font-size: 14px;\n    background-color: rgb(245, 245, 246);\n    border: 1px solid #cdced3;\n    padding: 18px 24px;\n    margin-bottom: 20px;\n    -webkit-border-radius: 4px;\n    -moz-border-radius: 4px;\n    border-radius: 4px;\n  }\n</style>\n"],sourceRoot:""}])},654:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=o(656),r=function(e){return e&&e.__esModule?e:{default:e}}(t);n.default=r.default},655:function(e,n,o){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:["titleName","introduce","content"]}},656:function(e,n,o){o(658);var t=o(2)(o(655),o(657),"data-v-b7699058",null);t.options.__file="/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/textBox/src/main.vue",t.esModule&&Object.keys(t.esModule).some(function(e){return"default"!==e&&"__esModule"!==e})&&console.error("named exports are not supported in *.vue files."),t.options.functional&&console.error("[vue-loader] main.vue: functional components are not supported with templates, they should use render functions."),function(){var n=o(0);n.install(o(1),!1),n.compatible&&(e.hot.accept(),e.hot.data?n.reload("data-v-b7699058",t.options):n.createRecord("data-v-b7699058",t.options))}(),e.exports=t.exports},657:function(e,n,o){e.exports={render:function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",[o("h2",[e._v(e._s(e.titleName))]),e._v(" "),o("p",[e._v(e._s(e.introduce))]),e._v(" "),o("div",{staticClass:"content-box"},[o("div",[e._v(e._s(e.content))])])])},staticRenderFns:[]},e.exports.render._withStripped=!0,e.hot.accept(),e.hot.data&&o(0).rerender("data-v-b7699058",e.exports)},658:function(e,n,o){var t=o(653);"string"==typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var r=o(4)("cd90feaa",t,!1);t.locals||e.hot.accept(653,function(){var n=o(653);"string"==typeof n&&(n=[[e.i,n,""]]),r(n)}),e.hot.dispose(function(){r()})},660:function(e,n,o){n=e.exports=o(3)(),n.push([e.i,"\n.ky-select .ky-input {\n  width: 380px;\n}\n.ky-form {\n  width: 480px;\n}\n.ky-checkbox-group {\n  width: 370px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n.ky-checkbox-group .ky-checkbox{\n  width:180px;\n  margin-left:0;\n}\n.ky-checkbox-group:after, .ky-checkbox-group:before{\n  content: ' ';\n  display: table;\n}\n.ky-checkbox-group:after{\n  clear: both;\n  visibility: hidden;\n  font-size: 0;\n  height: 0;\n}\n.demo-form-inline{\n  width: 100%;\n}\n.demo-form-inline .ky-form-item__content{\n  display: inline-block;\n}\n.demo-dynamic .ky-input{\n  margin-right: 10px;\n  width: 270px;\n  vertical-align: top;\n}\n","",{version:3,sources:["/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/business/form/src/main.vue?723c455d"],names:[],mappings:";AAmjCA;EACA,aAAA;CACA;AACA;EACA,aAAA;CACA;AAEA;EACA,aAAA;EACA,UAAA;EACA,WAAA;EACA,iBAAA;CACA;AACA;EACA,YAAA;EACA,cAAA;CACA;AACA;EACA,aAAA;EACA,eAAA;CACA;AAEA;EACA,YAAA;EACA,mBAAA;EACA,aAAA;EACA,UAAA;CACA;AACA;EACA,YAAA;CACA;AACA;EACA,sBAAA;CACA;AACA;EACA,mBAAA;EACA,aAAA;EACA,oBAAA;CACA",file:"main.vue",sourcesContent:['<template>\n  <div>\n    <h1>Form 表单</h1>\n    <p>由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据</p>\n\n    <code-box\n      :title="codeDemos[0].title"\n      :description="codeDemos[0].description"\n      :code="codeDemos[0].code"\n      :codeExplain="codeDemos[0].codeExplain">\n      <ky-form ref="form" :model="form" label-width="100px">\n        <ky-form-item label="活动名称">\n          <ky-input v-model="form.name"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="活动区域">\n          <ky-select v-model="form.region" placeholder="请选择活动区域">\n            <ky-option label="区域一" value="shanghai"></ky-option>\n            <ky-option label="区域二" value="beijing"></ky-option>\n          </ky-select>\n        </ky-form-item>\n        <ky-form-item label="活动时间">\n          <ky-col :span="11">\n            <ky-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></ky-date-picker>\n          </ky-col>\n          <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n          <ky-col :span="11">\n            <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="form.date2" style="width: 100%;"></ky-time-picker>\n          </ky-col>\n        </ky-form-item>\n        <ky-form-item label="活动性质">\n          <ky-checkbox-group v-model="form.type">\n            <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n            <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n            <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n            <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n          </ky-checkbox-group>\n        </ky-form-item>\n        <ky-form-item label="特殊资源">\n          <ky-radio-group v-model="form.resource">\n            <ky-radio label="线上品牌商赞助"></ky-radio>\n            <ky-radio label="线下场地免费"></ky-radio>\n          </ky-radio-group>\n        </ky-form-item>\n        <ky-form-item label="活动形式">\n          <ky-input type="textarea" v-model="form.desc"></ky-input>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="onSubmit">立即创建</ky-button>\n          <ky-button>取消</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[1].title"\n      :description="codeDemos[1].description"\n      :code="codeDemos[1].code"\n      :codeExplain="codeDemos[1].codeExplain">\n      <ky-form :inline="true" :model="formInline" class="demo-form-inline">\n        <ky-form-item label="审批人">\n          <ky-input v-model="formInline.user" placeholder="审批人"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="活动区域">\n          <ky-select v-model="formInline.region" placeholder="活动区域">\n            <ky-option label="区域一" value="shanghai"></ky-option>\n            <ky-option label="区域二" value="beijing"></ky-option>\n          </ky-select>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="onSubmit">查询</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[2].title"\n      :description="codeDemos[2].description"\n      :code="codeDemos[2].code"\n      :codeExplain="codeDemos[2].codeExplain">\n      <ky-radio-group v-model="labelPosition" size="small">\n        <ky-radio-button label="left">左对齐</ky-radio-button>\n        <ky-radio-button label="right">右对齐</ky-radio-button>\n        <ky-radio-button label="top">顶部对齐</ky-radio-button>\n      </ky-radio-group>\n      <div style="margin: 20px;"></div>\n      <ky-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\n        <ky-form-item label="名称">\n          <ky-input v-model="formLabelAlign.name"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="活动区域">\n          <ky-input v-model="formLabelAlign.region"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="活动形式">\n          <ky-input v-model="formLabelAlign.type"></ky-input>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[3].title"\n      :description="codeDemos[3].description"\n      :code="codeDemos[3].code"\n      :codeExplain="codeDemos[3].codeExplain">\n      <ky-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n        <ky-form-item label="活动名称" prop="name">\n          <ky-input v-model="ruleForm.name"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="活动区域" prop="region">\n          <ky-select v-model="ruleForm.region" placeholder="请选择活动区域">\n            <ky-option label="区域一" value="shanghai"></ky-option>\n            <ky-option label="区域二" value="beijing"></ky-option>\n          </ky-select>\n        </ky-form-item>\n        <ky-form-item label="活动时间" required>\n          <ky-col :span="11">\n            <ky-form-item prop="date1">\n              <ky-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></ky-date-picker>\n            </ky-form-item>\n          </ky-col>\n          <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n          <ky-col :span="11">\n            <ky-form-item prop="date2">\n              <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></ky-time-picker>\n            </ky-form-item>\n          </ky-col>\n        </ky-form-item>\n        <ky-form-item label="活动性质" prop="type">\n          <ky-checkbox-group v-model="ruleForm.type">\n            <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n            <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n            <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n            <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n          </ky-checkbox-group>\n        </ky-form-item>\n        <ky-form-item label="特殊资源" prop="resource">\n          <ky-radio-group v-model="ruleForm.resource">\n            <ky-radio label="线上品牌商赞助"></ky-radio>\n            <ky-radio label="线下场地免费"></ky-radio>\n          </ky-radio-group>\n        </ky-form-item>\n        <ky-form-item label="活动形式" prop="desc">\n          <ky-input type="textarea" v-model="ruleForm.desc"></ky-input>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</ky-button>\n          <ky-button @click="resetForm(\'ruleForm\')">重置</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[4].title"\n      :description="codeDemos[4].description"\n      :code="codeDemos[4].code"\n      :codeExplain="codeDemos[4].codeExplain">\n      <ky-form :model="ruleForm2" :rules="rules2" ref="ruleForm2" label-width="100px" class="demo-ruleForm">\n        <ky-form-item label="密码" prop="pass">\n          <ky-input type="password" v-model="ruleForm2.pass" auto-complete="off"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="确认密码" prop="checkPass">\n          <ky-input type="password" v-model="ruleForm2.checkPass" auto-complete="off"></ky-input>\n        </ky-form-item>\n        <ky-form-item label="年龄" prop="age">\n          <ky-input v-model.number="ruleForm2.age"></ky-input>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="submitForm(\'ruleForm2\')">提交</ky-button>\n          <ky-button @click="resetForm(\'ruleForm2\')">重置</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[5].title"\n      :description="codeDemos[5].description"\n      :code="codeDemos[5].code"\n      :codeExplain="codeDemos[5].codeExplain">\n      <ky-form  :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\n        <ky-form-item\n          prop="email"\n          label="邮箱"\n          :rules="[\n      { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\n      { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: \'blur,change\' }\n    ]"\n        >\n          <ky-input v-model="dynamicValidateForm.email"></ky-input>\n        </ky-form-item>\n        <ky-form-item\n          v-for="(domain, index) in dynamicValidateForm.domains"\n          :label="\'域名\' + index"\n          :key="domain.key"\n          :prop="\'domains.\' + index + \'.value\'"\n          :rules="{\n      required: true, message: \'域名不能为空\', trigger: \'blur\'\n    }"\n        >\n          <ky-input v-model="domain.value"></ky-input><ky-button @click.prevent="removeDomain(domain)">删除</ky-button>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</ky-button>\n          <ky-button @click="addDomain">新增域名</ky-button>\n          <ky-button @click="resetForm(\'dynamicValidateForm\')">重置</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <code-box\n      :title="codeDemos[6].title"\n      :description="codeDemos[6].description"\n      :code="codeDemos[6].code"\n      :codeExplain="codeDemos[6].codeExplain">\n      <ky-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\n        <ky-form-item\n          label="年龄"\n          prop="age"\n          :rules="[\n      { required: true, message: \'年龄不能为空\'},\n      { type: \'number\', message: \'年龄必须为数字值\'}\n    ]"\n        >\n          <ky-input type="age" v-model.number="numberValidateForm.age" auto-complete="off"></ky-input>\n        </ky-form-item>\n        <ky-form-item>\n          <ky-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</ky-button>\n          <ky-button @click="resetForm(\'numberValidateForm\')">重置</ky-button>\n        </ky-form-item>\n      </ky-form>\n    </code-box>\n\n    <text-box\n      :titleName="serveData[0].titleName"\n      :introduce="serveData[0].introduce"\n      :content="serveData[0].content">\n    </text-box>\n\n    <h2>Form Attributes</h2>\n    <ky-table\n      :data="tableData1"\n      style="width: 100%">\n      <ky-table-column\n        prop="params"\n        label="参数"\n        width="140">\n      </ky-table-column>\n      <ky-table-column\n        prop="mark"\n        label="说明"\n        width="180">\n      </ky-table-column>\n      <ky-table-column\n        prop="type"\n        label="类型">\n      </ky-table-column>\n      <ky-table-column\n        prop="available_value"\n        label="可选值">\n      </ky-table-column>\n      <ky-table-column\n        prop="default_value"\n        label="默认值">\n      </ky-table-column>\n    </ky-table>\n\n    <h2>Form Methods</h2>\n    <ky-table\n      :data="tableData2"\n      style="width: 100%">\n      <ky-table-column\n        prop="eventName"\n        label="方法名"\n        width="140">\n      </ky-table-column>\n      <ky-table-column\n        prop="mark"\n        label="说明">\n      </ky-table-column>\n      <ky-table-column\n        prop="params"\n        label="参数">\n      </ky-table-column>\n    </ky-table>\n\n    <h2>Form-Item Attributes</h2>\n    <ky-table\n      :data="tableData3"\n      style="width: 100%">\n      <ky-table-column\n        prop="params"\n        label="参数"\n        width="140">\n      </ky-table-column>\n      <ky-table-column\n        prop="mark"\n        label="说明"\n        width="180">\n      </ky-table-column>\n      <ky-table-column\n        prop="type"\n        label="类型">\n      </ky-table-column>\n      <ky-table-column\n        prop="available_value"\n        label="可选值">\n      </ky-table-column>\n      <ky-table-column\n        prop="default_value"\n        label="默认值">\n      </ky-table-column>\n    </ky-table>\n\n    <h2>Form-Item Slot</h2>\n    <ky-table\n      :data="tableData4"\n      style="width: 100%">\n      <ky-table-column\n        prop="name"\n        label="name">\n      </ky-table-column>\n      <ky-table-column\n        prop="mark"\n        label="说明">\n      </ky-table-column>\n    </ky-table>\n  </div>\n</template>\n<script>\n  import codeBox from \'../../../comm/codeBox\'\n  import textBox from \'../../../comm/textBox\'\n\n  export default {\n    data(){\n      var checkAge = (rule, value, callback) => {\n        if (!value) {\n          return callback(new Error(\'年龄不能为空\'));\n        }\n        setTimeout(() => {\n          if (!Number.isInteger(value)) {\n            callback(new Error(\'请输入数字值\'));\n          } else {\n            if (value < 18) {\n              callback(new Error(\'必须年满18岁\'));\n            } else {\n              callback();\n            }\n          }\n        }, 1000);\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === \'\') {\n          callback(new Error(\'请输入密码\'));\n        } else {\n          if (this.ruleForm2.checkPass !== \'\') {\n            this.$refs.ruleForm2.validateField(\'checkPass\');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === \'\') {\n          callback(new Error(\'请再次输入密码\'));\n        } else if (value !== this.ruleForm2.pass) {\n          callback(new Error(\'两次输入密码不一致!\'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        form: {\n          name: \'\',\n          region: \'\',\n          date1: \'\',\n          date2: \'\',\n          type: [],\n          resource: \'\',\n          desc: \'\'\n        },\n        formInline: {\n          user: \'\',\n          region: \'\'\n        },\n        labelPosition: \'right\',\n        formLabelAlign: {\n          name: \'\',\n          region: \'\',\n          type: \'\'\n        },\n        ruleForm: {\n          name: \'\',\n          region: \'\',\n          date1: \'\',\n          date2: \'\',\n          type: [],\n          resource: \'\',\n          desc: \'\'\n        },\n        rules: {\n          name: [\n            { required: true, message: \'请输入活动名称\', trigger: \'blur\' },\n            { min: 3, max: 5, message: \'长度在 3 到 5 个字符\', trigger: \'blur\' }\n          ],\n          region: [\n            { required: true, message: \'请选择活动区域\', trigger: \'change\' }\n          ],\n          date1: [\n            { type: \'date\', required: true, message: \'请选择日期\', trigger: \'change\' }\n          ],\n          date2: [\n            { type: \'date\', required: true, message: \'请选择时间\', trigger: \'change\' }\n          ],\n          type: [\n            { type: \'array\', required: true, message: \'请至少选择一个活动性质\', trigger: \'change\' }\n          ],\n          resource: [\n            { required: true, message: \'请选择活动资源\', trigger: \'change\' }\n          ],\n          desc: [\n            { required: true, message: \'请填写活动形式\', trigger: \'blur\' }\n          ]\n        },\n        ruleForm2: {\n          pass: \'\',\n          checkPass: \'\',\n          age: \'\'\n        },\n        rules2: {\n          pass: [\n            { validator: validatePass, trigger: \'blur\' }\n          ],\n          checkPass: [\n            { validator: validatePass2, trigger: \'blur\' }\n          ],\n          age: [\n            { validator: checkAge, trigger: \'blur\' }\n          ]\n        },\n        dynamicValidateForm: {\n          domains: [{\n            value: \'\'\n          }],\n          email: \'\'\n        },\n        numberValidateForm: {\n          age: \'\'\n        },\n        codeDemos: [\n          {\n            title: \'典型表单\',\n            description: \'包括各种表单项，比如输入框、选择器、开关、单选框、多选框等。\',\n            codeExplain: `在 Form 组件中，每一个表单域由一个 Form-Item 组件构成，表单域中可以放置各种类型的表单控件，\n            包括 Input、Select、Checkbox、Radio、Switch、DatePicker、TimePicker`,\n            code:`\n            <ky-form ref="form" :model="form" label-width="100px">\n              <ky-form-item label="活动名称">\n                <ky-input v-model="form.name"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="活动区域">\n                <ky-select v-model="form.region" placeholder="请选择活动区域">\n                  <ky-option label="区域一" value="shanghai"></ky-option>\n                  <ky-option label="区域二" value="beijing"></ky-option>\n                </ky-select>\n              </ky-form-item>\n              <ky-form-item label="活动时间">\n                <ky-col :span="11">\n                  <ky-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></ky-date-picker>\n                </ky-col>\n                <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n                <ky-col :span="11">\n                  <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="form.date2" style="width: 100%;"></ky-time-picker>\n                </ky-col>\n              </ky-form-item>\n              <ky-form-item label="活动性质">\n                <ky-checkbox-group v-model="form.type">\n                  <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n                </ky-checkbox-group>\n              </ky-form-item>\n              <ky-form-item label="特殊资源">\n                <ky-radio-group v-model="form.resource">\n                  <ky-radio label="线上品牌商赞助"></ky-radio>\n                  <ky-radio label="线下场地免费"></ky-radio>\n                </ky-radio-group>\n              </ky-form-item>\n              <ky-form-item label="活动形式">\n                <ky-input type="textarea" v-model="form.desc"></ky-input>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="onSubmit">立即创建</ky-button>\n                <ky-button>取消</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    form: {\n                      name: \'\',\n                      region: \'\',\n                      date1: \'\',\n                      date2: \'\',\n                      type: [],\n                      resource: \'\',\n                      desc: \'\'\n                    }\n                  }\n                },\n                methods: {\n                  onSubmit() {\n                    console.log(\'submit!\');\n                  }\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'行内表单\',\n            description: \'当垂直方向空间受限且表单较简单时，可以在一行内放置表单。\',\n            codeExplain: `设置 inline 属性可以让表单域变为行内的表单域`,\n            code:`\n            <ky-form :inline="true" :model="formInline" class="demo-form-inline">\n              <ky-form-item label="审批人">\n                <ky-input v-model="formInline.user" placeholder="审批人"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="活动区域">\n                <ky-select v-model="formInline.region" placeholder="活动区域">\n                  <ky-option label="区域一" value="shanghai"></ky-option>\n                  <ky-option label="区域二" value="beijing"></ky-option>\n                </ky-select>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="onSubmit">查询</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    formInline: {\n                      user: \'\',\n                      region: \'\'\n                    }\n                  }\n                },\n                methods: {\n                  onSubmit() {\n                    console.log(\'submit!\');\n                  }\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'对齐方式\',\n            description: \'根据具体目标和制约因素，选择最佳的标签对齐方式。\',\n            codeExplain: `通过设置 label-position 属性可以改变表单域标签的位置，可选值为 top、left，当设为 top\n            时标签会置于表单域的顶部`,\n            code:`\n            <ky-radio-group v-model="labelPosition" size="small">\n              <ky-radio-button label="left">左对齐</ky-radio-button>\n              <ky-radio-button label="right">右对齐</ky-radio-button>\n              <ky-radio-button label="top">顶部对齐</ky-radio-button>\n            </ky-radio-group>\n            <div style="margin: 20px;"></div>\n            <ky-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\n              <ky-form-item label="名称">\n                <ky-input v-model="formLabelAlign.name"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="活动区域">\n                <ky-input v-model="formLabelAlign.region"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="活动形式">\n                <ky-input v-model="formLabelAlign.type"></ky-input>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    labelPosition: \'right\',\n                    formLabelAlign: {\n                      name: \'\',\n                      region: \'\',\n                      type: \'\'\n                    }\n                  };\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'表单验证\',\n            description: \'在防止用户犯错的前提下，尽可能让用户更早地发现并纠正错误。\',\n            codeExplain: `Form 组件提供了表单验证的功能，只需要通过 rule 属性传入约定的验证规则，并 Form-Item 的\n             prop 属性设置为需校验的字段名即可。校验规则参见 async-validator`,\n            code:`\n            <ky-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n              <ky-form-item label="活动名称" prop="name">\n                <ky-input v-model="ruleForm.name"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="活动区域" prop="region">\n                <ky-select v-model="ruleForm.region" placeholder="请选择活动区域">\n                  <ky-option label="区域一" value="shanghai"></ky-option>\n                  <ky-option label="区域二" value="beijing"></ky-option>\n                </ky-select>\n              </ky-form-item>\n              <ky-form-item label="活动时间" required>\n                <ky-col :span="11">\n                  <ky-form-item prop="date1">\n                    <ky-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></ky-date-picker>\n                  </ky-form-item>\n                </ky-col>\n                <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n                <ky-col :span="11">\n                  <ky-form-item prop="date2">\n                    <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></ky-time-picker>\n                  </ky-form-item>\n                </ky-col>\n              </ky-form-item>\n              <ky-form-item label="活动性质" prop="type">\n                <ky-checkbox-group v-model="ruleForm.type">\n                  <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n                  <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n                </ky-checkbox-group>\n              </ky-form-item>\n              <ky-form-item label="特殊资源" prop="resource">\n                <ky-radio-group v-model="ruleForm.resource">\n                  <ky-radio label="线上品牌商赞助"></ky-radio>\n                  <ky-radio label="线下场地免费"></ky-radio>\n                </ky-radio-group>\n              </ky-form-item>\n              <ky-form-item label="活动形式" prop="desc">\n                <ky-input type="textarea" v-model="ruleForm.desc"></ky-input>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</ky-button>\n                <ky-button @click="resetForm(\'ruleForm\')">重置</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    ruleForm: {\n                      name: \'\',\n                      region: \'\',\n                      date1: \'\',\n                      date2: \'\',\n                      type: [],\n                      resource: \'\',\n                      desc: \'\'\n                    },\n                    rules: {\n                      name: [\n                        { required: true, message: \'请输入活动名称\', trigger: \'blur\' },\n                        { min: 3, max: 5, message: \'长度在 3 到 5 个字符\', trigger: \'blur\' }\n                      ],\n                      region: [\n                        { required: true, message: \'请选择活动区域\', trigger: \'change\' }\n                      ],\n                      date1: [\n                        { type: \'date\', required: true, message: \'请选择日期\', trigger: \'change\' }\n                      ],\n                      date2: [\n                        { type: \'date\', required: true, message: \'请选择时间\', trigger: \'change\' }\n                      ],\n                      type: [\n                        { type: \'array\', required: true, message: \'请至少选择一个活动性质\', trigger: \'change\' }\n                      ],\n                      resource: [\n                        { required: true, message: \'请选择活动资源\', trigger: \'change\' }\n                      ],\n                      desc: [\n                        { required: true, message: \'请填写活动形式\', trigger: \'blur\' }\n                      ]\n                    }\n                  };\n                },\n                methods: {\n                  submitForm(formName) {\n                    this.$refs[formName].validate((valid) => {\n                      if (valid) {\n                        alert(\'submit!\');\n                      } else {\n                        console.log(\'error submit!!\');\n                        return false;\n                      }\n                    });\n                  },\n                  resetForm(formName) {\n                    this.$refs[formName].resetFields();\n                  }\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'自定义校验规则\',\n            description: \'\',\n            codeExplain: `这个例子中展示了如何使用自定义验证规则来完成密码的二次验证`,\n            code:`\n            <ky-form :model="ruleForm2" :rules="rules2" ref="ruleForm2" label-width="100px" class="demo-ruleForm">\n              <ky-form-item label="密码" prop="pass">\n                <ky-input type="password" v-model="ruleForm2.pass" auto-complete="off"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="确认密码" prop="checkPass">\n                <ky-input type="password" v-model="ruleForm2.checkPass" auto-complete="off"></ky-input>\n              </ky-form-item>\n              <ky-form-item label="年龄" prop="age">\n                <ky-input v-model.number="ruleForm2.age"></ky-input>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="submitForm(\'ruleForm2\')">提交</ky-button>\n                <ky-button @click="resetForm(\'ruleForm2\')">重置</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  var checkAge = (rule, value, callback) => {\n                    if (!value) {\n                      return callback(new Error(\'年龄不能为空\'));\n                    }\n                    setTimeout(() => {\n                      if (!Number.isInteger(value)) {\n                        callback(new Error(\'请输入数字值\'));\n                      } else {\n                        if (value < 18) {\n                          callback(new Error(\'必须年满18岁\'));\n                        } else {\n                          callback();\n                        }\n                      }\n                    }, 1000);\n                  };\n                  var validatePass = (rule, value, callback) => {\n                    if (value === \'\') {\n                      callback(new Error(\'请输入密码\'));\n                    } else {\n                      if (this.ruleForm2.checkPass !== \'\') {\n                        this.$refs.ruleForm2.validateField(\'checkPass\');\n                      }\n                      callback();\n                    }\n                  };\n                  var validatePass2 = (rule, value, callback) => {\n                    if (value === \'\') {\n                      callback(new Error(\'请再次输入密码\'));\n                    } else if (value !== this.ruleForm2.pass) {\n                      callback(new Error(\'两次输入密码不一致!\'));\n                    } else {\n                      callback();\n                    }\n                  };\n                  return {\n                    ruleForm2: {\n                      pass: \'\',\n                      checkPass: \'\',\n                      age: \'\'\n                    },\n                    rules2: {\n                      pass: [\n                        { validator: validatePass, trigger: \'blur\' }\n                      ],\n                      checkPass: [\n                        { validator: validatePass2, trigger: \'blur\' }\n                      ],\n                      age: [\n                        { validator: checkAge, trigger: \'blur\' }\n                      ]\n                    }\n                  };\n                },\n                methods: {\n                  submitForm(formName) {\n                    this.$refs[formName].validate((valid) => {\n                      if (valid) {\n                        alert(\'submit!\');\n                      } else {\n                        console.log(\'error submit!!\');\n                        return false;\n                      }\n                    });\n                  },\n                  resetForm(formName) {\n                    this.$refs[formName].resetFields();\n                  }\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'动态增减表单项\',\n            description: \'\',\n            codeExplain: `除了在 Form 组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则`,\n            code:`\n            <ky-form  :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\n              <ky-form-item\n                prop="email"\n                label="邮箱"\n                :rules="[\n            { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\n            { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: \'blur,change\' }\n          ]"\n              >\n                <ky-input v-model="dynamicValidateForm.email"></ky-input>\n              </ky-form-item>\n              <ky-form-item\n                v-for="(domain, index) in dynamicValidateForm.domains"\n                :label="\'域名\' + index"\n                :key="domain.key"\n                :prop="\'domains.\' + index + \'.value\'"\n                :rules="{\n            required: true, message: \'域名不能为空\', trigger: \'blur\'\n          }"\n              >\n                <ky-input v-model="domain.value"></ky-input><ky-button @click.prevent="removeDomain(domain)">删除</ky-button>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</ky-button>\n                <ky-button @click="addDomain">新增域名</ky-button>\n                <ky-button @click="resetForm(\'dynamicValidateForm\')">重置</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    dynamicValidateForm: {\n                      domains: [{\n                        value: \'\'\n                      }],\n                      email: \'\'\n                    }\n                  };\n                },\n                methods: {\n                  submitForm(formName) {\n                    this.$refs[formName].validate((valid) => {\n                      if (valid) {\n                        alert(\'submit!\');\n                      } else {\n                        console.log(\'error submit!!\');\n                        return false;\n                      }\n                    });\n                  },\n                  resetForm(formName) {\n                    this.$refs[formName].resetFields();\n                  },\n                  removeDomain(item) {\n                    var index = this.dynamicValidateForm.domains.indexOf(item)\n                    if (index !== -1) {\n                      this.dynamicValidateForm.domains.splice(index, 1)\n                    }\n                  },\n                  addDomain() {\n                    this.dynamicValidateForm.domains.push({\n                      value: \'\',\n                      key: Date.now()\n                    });\n                  }\n                }\n              }\n            <\\/script>`\n          },\n          {\n            title: \'数字类型验证\',\n            description: \'\',\n            codeExplain: `数字类型的验证需要在 v-model 处加上 .number 的修饰符，这是 Vue 自身提供的用于将绑定值\n            转化为 number 类型的修饰符。`,\n            code:`\n            <ky-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\n              <ky-form-item\n                label="年龄"\n                prop="age"\n                :rules="[\n            { required: true, message: \'年龄不能为空\'},\n            { type: \'number\', message: \'年龄必须为数字值\'}\n          ]"\n              >\n                <ky-input type="age" v-model.number="numberValidateForm.age" auto-complete="off"></ky-input>\n              </ky-form-item>\n              <ky-form-item>\n                <ky-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</ky-button>\n                <ky-button @click="resetForm(\'numberValidateForm\')">重置</ky-button>\n              </ky-form-item>\n            </ky-form>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    numberValidateForm: {\n                      age: \'\'\n                    }\n                  };\n                },\n                methods: {\n                  submitForm(formName) {\n                    this.$refs[formName].validate((valid) => {\n                      if (valid) {\n                        alert(\'submit!\');\n                      } else {\n                        console.log(\'error submit!!\');\n                        return false;\n                      }\n                    });\n                  },\n                  resetForm(formName) {\n                    this.$refs[formName].resetFields();\n                  }\n                }\n              }\n            <\\/script>`\n          }\n        ],\n        serveData:[{\n          titleName:"",\n          introduce:"",\n          content:"嵌套在 ky-form-item 中的 ky-form-item 标签宽度默认为零，不会继承 ky-form 的 label-width。" +\n          "如果需要可以为其单独设置 label-width 属性。"\n        }],\n        tableData1: [{\n          params: \'model\',\n          mark: \'表单数据对象\',\n          type: \'object\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'rules\',\n          mark: \'表单验证规则\',\n          type: \'object\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'inline\',\n          mark: \'行内表单模式\',\n          type: \'boolean\',\n          available_value: \'—\',\n          default_value: \'false\'\n        }, {\n          params: \'label-position\',\n          mark: \'表单域标签的位置\',\n          type: \'string\',\n          available_value: \'right/left/top\',\n          default_value: \'right\'\n        }, {\n          params: \'label-width\',\n          mark: \'自定义类名\',\n          type: \'string\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'label-suffix\',\n          mark: \'表单域标签的后缀\',\n          type: \'string\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'show-message\',\n          mark: \'是否显示校验错误信息\',\n          type: \'boolean\',\n          available_value: \'—\',\n          default_value: \'false\'\n        }],\n        tableData2: [{\n          eventName: \'validate\',\n          mark: \'对整个表单进行校验的方法\',\n          params: \'Function(callback: Function(boolean))\',\n        }, {\n          eventName: \'validateField\',\n          mark: \'对部分表单字段进行校验的方法\',\n          params: \'Function(prop: string, callback: Function(errorMessage: string))\',\n        }, {\n          eventName: \'resetFields\',\n          mark: \'对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\',\n          params: \'-\',\n        }, ],\n        tableData3: [{\n          params: \'prop\',\n          mark: \'表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的\',\n          type: \'string\',\n          available_value: \'传入 Form 组件的 model 中的字段\',\n          default_value: \'—\'\n        }, {\n          params: \'label\',\n          mark: \'标签文本\',\n          type: \'\tstring\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'label-width\',\n          mark: \'表单域标签的的宽度，例如 "50px"\',\n          type: \'string\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'required\',\n          mark: \'是否必填，如不设置，则会根据校验规则自动生成\',\n          type: \'boolean\',\n          available_value: \'—\',\n          default_value: \'false\'\n        }, {\n          params: \'rules\',\n          mark: \'表单验证规则\',\n          type: \'object\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'error\',\n          mark: \'表单域验证错误信息, 设置该值会使表单验证状态变为error，并显示该错误信息\',\n          type: \'string\',\n          available_value: \'—\',\n          default_value: \'—\'\n        }, {\n          params: \'show-message\',\n          mark: \'是否显示校验错误信息\',\n          type: \'boolean\',\n          available_value: \'—\',\n          default_value: \'false\'\n        }],\n        tableData4: [{\n          name: \'—\',\n          mark: \'Form Item 的内容\',\n        }, {\n          name: \'label\',\n          mark: \'标签文本的内容\',\n        }]\n      }\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      },\n      removeDomain(item) {\n        var index = this.dynamicValidateForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dynamicValidateForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dynamicValidateForm.domains.push({\n          value: \'\',\n          key: Date.now()\n        });\n      },\n\n    },\n    components: {\n      codeBox,\n      textBox\n    }\n  }\n<\/script>\n<style>\n  .ky-select .ky-input {\n    width: 380px;\n  }\n  .ky-form {\n    width: 480px;\n  }\n\n  .ky-checkbox-group {\n    width: 370px;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  .ky-checkbox-group .ky-checkbox{\n    width:180px;\n    margin-left:0;\n  }\n  .ky-checkbox-group:after, .ky-checkbox-group:before{\n    content: \' \';\n    display: table;\n  }\n\n  .ky-checkbox-group:after{\n    clear: both;\n    visibility: hidden;\n    font-size: 0;\n    height: 0;\n  }\n  .demo-form-inline{\n    width: 100%;\n  }\n  .demo-form-inline .ky-form-item__content{\n    display: inline-block;\n  }\n  .demo-dynamic .ky-input{\n    margin-right: 10px;\n    width: 270px;\n    vertical-align: top;\n  }\n</style>\n'],sourceRoot:""}])},693:function(e,n,o){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0});var r=o(709),a=t(r),l=o(648),i=t(l),m=o(654),s=t(m);n.default={data:function(){var e=this,n=function(e,n,o){if(!n)return o(new Error("年龄不能为空"));setTimeout(function(){(0,a.default)(n)?n<18?o(new Error("必须年满18岁")):o():o(new Error("请输入数字值"))},1e3)};return{form:{name:"",region:"",date1:"",date2:"",type:[],resource:"",desc:""},formInline:{user:"",region:""},labelPosition:"right",formLabelAlign:{name:"",region:"",type:""},ruleForm:{name:"",region:"",date1:"",date2:"",type:[],resource:"",desc:""},rules:{name:[{required:!0,message:"请输入活动名称",trigger:"blur"},{min:3,max:5,message:"长度在 3 到 5 个字符",trigger:"blur"}],region:[{required:!0,message:"请选择活动区域",trigger:"change"}],date1:[{type:"date",required:!0,message:"请选择日期",trigger:"change"}],date2:[{type:"date",required:!0,message:"请选择时间",trigger:"change"}],type:[{type:"array",required:!0,message:"请至少选择一个活动性质",trigger:"change"}],resource:[{required:!0,message:"请选择活动资源",trigger:"change"}],desc:[{required:!0,message:"请填写活动形式",trigger:"blur"}]},ruleForm2:{pass:"",checkPass:"",age:""},rules2:{pass:[{validator:function(n,o,t){""===o?t(new Error("请输入密码")):(""!==e.ruleForm2.checkPass&&e.$refs.ruleForm2.validateField("checkPass"),t())},trigger:"blur"}],checkPass:[{validator:function(n,o,t){""===o?t(new Error("请再次输入密码")):o!==e.ruleForm2.pass?t(new Error("两次输入密码不一致!")):t()},trigger:"blur"}],age:[{validator:n,trigger:"blur"}]},dynamicValidateForm:{domains:[{value:""}],email:""},numberValidateForm:{age:""},codeDemos:[{title:"典型表单",description:"包括各种表单项，比如输入框、选择器、开关、单选框、多选框等。",codeExplain:"在 Form 组件中，每一个表单域由一个 Form-Item 组件构成，表单域中可以放置各种类型的表单控件，\n          包括 Input、Select、Checkbox、Radio、Switch、DatePicker、TimePicker",code:'\n          <ky-form ref="form" :model="form" label-width="100px">\n            <ky-form-item label="活动名称">\n              <ky-input v-model="form.name"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="活动区域">\n              <ky-select v-model="form.region" placeholder="请选择活动区域">\n                <ky-option label="区域一" value="shanghai"></ky-option>\n                <ky-option label="区域二" value="beijing"></ky-option>\n              </ky-select>\n            </ky-form-item>\n            <ky-form-item label="活动时间">\n              <ky-col :span="11">\n                <ky-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></ky-date-picker>\n              </ky-col>\n              <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n              <ky-col :span="11">\n                <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="form.date2" style="width: 100%;"></ky-time-picker>\n              </ky-col>\n            </ky-form-item>\n            <ky-form-item label="活动性质">\n              <ky-checkbox-group v-model="form.type">\n                <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n                <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n                <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n                <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n              </ky-checkbox-group>\n            </ky-form-item>\n            <ky-form-item label="特殊资源">\n              <ky-radio-group v-model="form.resource">\n                <ky-radio label="线上品牌商赞助"></ky-radio>\n                <ky-radio label="线下场地免费"></ky-radio>\n              </ky-radio-group>\n            </ky-form-item>\n            <ky-form-item label="活动形式">\n              <ky-input type="textarea" v-model="form.desc"></ky-input>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="onSubmit">立即创建</ky-button>\n              <ky-button>取消</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  form: {\n                    name: \'\',\n                    region: \'\',\n                    date1: \'\',\n                    date2: \'\',\n                    type: [],\n                    resource: \'\',\n                    desc: \'\'\n                  }\n                }\n              },\n              methods: {\n                onSubmit() {\n                  console.log(\'submit!\');\n                }\n              }\n            }\n          <\/script>'},{title:"行内表单",description:"当垂直方向空间受限且表单较简单时，可以在一行内放置表单。",codeExplain:"设置 inline 属性可以让表单域变为行内的表单域",code:'\n          <ky-form :inline="true" :model="formInline" class="demo-form-inline">\n            <ky-form-item label="审批人">\n              <ky-input v-model="formInline.user" placeholder="审批人"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="活动区域">\n              <ky-select v-model="formInline.region" placeholder="活动区域">\n                <ky-option label="区域一" value="shanghai"></ky-option>\n                <ky-option label="区域二" value="beijing"></ky-option>\n              </ky-select>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="onSubmit">查询</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  formInline: {\n                    user: \'\',\n                    region: \'\'\n                  }\n                }\n              },\n              methods: {\n                onSubmit() {\n                  console.log(\'submit!\');\n                }\n              }\n            }\n          <\/script>'},{title:"对齐方式",description:"根据具体目标和制约因素，选择最佳的标签对齐方式。",codeExplain:"通过设置 label-position 属性可以改变表单域标签的位置，可选值为 top、left，当设为 top\n          时标签会置于表单域的顶部",code:'\n          <ky-radio-group v-model="labelPosition" size="small">\n            <ky-radio-button label="left">左对齐</ky-radio-button>\n            <ky-radio-button label="right">右对齐</ky-radio-button>\n            <ky-radio-button label="top">顶部对齐</ky-radio-button>\n          </ky-radio-group>\n          <div style="margin: 20px;"></div>\n          <ky-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\n            <ky-form-item label="名称">\n              <ky-input v-model="formLabelAlign.name"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="活动区域">\n              <ky-input v-model="formLabelAlign.region"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="活动形式">\n              <ky-input v-model="formLabelAlign.type"></ky-input>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  labelPosition: \'right\',\n                  formLabelAlign: {\n                    name: \'\',\n                    region: \'\',\n                    type: \'\'\n                  }\n                };\n              }\n            }\n          <\/script>'},{title:"表单验证",description:"在防止用户犯错的前提下，尽可能让用户更早地发现并纠正错误。",codeExplain:"Form 组件提供了表单验证的功能，只需要通过 rule 属性传入约定的验证规则，并 Form-Item 的\n           prop 属性设置为需校验的字段名即可。校验规则参见 async-validator",code:'\n          <ky-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n            <ky-form-item label="活动名称" prop="name">\n              <ky-input v-model="ruleForm.name"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="活动区域" prop="region">\n              <ky-select v-model="ruleForm.region" placeholder="请选择活动区域">\n                <ky-option label="区域一" value="shanghai"></ky-option>\n                <ky-option label="区域二" value="beijing"></ky-option>\n              </ky-select>\n            </ky-form-item>\n            <ky-form-item label="活动时间" required>\n              <ky-col :span="11">\n                <ky-form-item prop="date1">\n                  <ky-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></ky-date-picker>\n                </ky-form-item>\n              </ky-col>\n              <ky-col class="line" :span="2" style="text-align: center;">-</ky-col>\n              <ky-col :span="11">\n                <ky-form-item prop="date2">\n                  <ky-time-picker type="fixed-time" placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></ky-time-picker>\n                </ky-form-item>\n              </ky-col>\n            </ky-form-item>\n            <ky-form-item label="活动性质" prop="type">\n              <ky-checkbox-group v-model="ruleForm.type">\n                <ky-checkbox label="美食/餐厅线上活动" name="type"></ky-checkbox>\n                <ky-checkbox label="地推活动" name="type"></ky-checkbox>\n                <ky-checkbox label="线下主题活动" name="type"></ky-checkbox>\n                <ky-checkbox label="单纯品牌曝光" name="type"></ky-checkbox>\n              </ky-checkbox-group>\n            </ky-form-item>\n            <ky-form-item label="特殊资源" prop="resource">\n              <ky-radio-group v-model="ruleForm.resource">\n                <ky-radio label="线上品牌商赞助"></ky-radio>\n                <ky-radio label="线下场地免费"></ky-radio>\n              </ky-radio-group>\n            </ky-form-item>\n            <ky-form-item label="活动形式" prop="desc">\n              <ky-input type="textarea" v-model="ruleForm.desc"></ky-input>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</ky-button>\n              <ky-button @click="resetForm(\'ruleForm\')">重置</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  ruleForm: {\n                    name: \'\',\n                    region: \'\',\n                    date1: \'\',\n                    date2: \'\',\n                    type: [],\n                    resource: \'\',\n                    desc: \'\'\n                  },\n                  rules: {\n                    name: [\n                      { required: true, message: \'请输入活动名称\', trigger: \'blur\' },\n                      { min: 3, max: 5, message: \'长度在 3 到 5 个字符\', trigger: \'blur\' }\n                    ],\n                    region: [\n                      { required: true, message: \'请选择活动区域\', trigger: \'change\' }\n                    ],\n                    date1: [\n                      { type: \'date\', required: true, message: \'请选择日期\', trigger: \'change\' }\n                    ],\n                    date2: [\n                      { type: \'date\', required: true, message: \'请选择时间\', trigger: \'change\' }\n                    ],\n                    type: [\n                      { type: \'array\', required: true, message: \'请至少选择一个活动性质\', trigger: \'change\' }\n                    ],\n                    resource: [\n                      { required: true, message: \'请选择活动资源\', trigger: \'change\' }\n                    ],\n                    desc: [\n                      { required: true, message: \'请填写活动形式\', trigger: \'blur\' }\n                    ]\n                  }\n                };\n              },\n              methods: {\n                submitForm(formName) {\n                  this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                      alert(\'submit!\');\n                    } else {\n                      console.log(\'error submit!!\');\n                      return false;\n                    }\n                  });\n                },\n                resetForm(formName) {\n                  this.$refs[formName].resetFields();\n                }\n              }\n            }\n          <\/script>'},{title:"自定义校验规则",description:"",codeExplain:"这个例子中展示了如何使用自定义验证规则来完成密码的二次验证",code:'\n          <ky-form :model="ruleForm2" :rules="rules2" ref="ruleForm2" label-width="100px" class="demo-ruleForm">\n            <ky-form-item label="密码" prop="pass">\n              <ky-input type="password" v-model="ruleForm2.pass" auto-complete="off"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="确认密码" prop="checkPass">\n              <ky-input type="password" v-model="ruleForm2.checkPass" auto-complete="off"></ky-input>\n            </ky-form-item>\n            <ky-form-item label="年龄" prop="age">\n              <ky-input v-model.number="ruleForm2.age"></ky-input>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="submitForm(\'ruleForm2\')">提交</ky-button>\n              <ky-button @click="resetForm(\'ruleForm2\')">重置</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                var checkAge = (rule, value, callback) => {\n                  if (!value) {\n                    return callback(new Error(\'年龄不能为空\'));\n                  }\n                  setTimeout(() => {\n                    if (!Number.isInteger(value)) {\n                      callback(new Error(\'请输入数字值\'));\n                    } else {\n                      if (value < 18) {\n                        callback(new Error(\'必须年满18岁\'));\n                      } else {\n                        callback();\n                      }\n                    }\n                  }, 1000);\n                };\n                var validatePass = (rule, value, callback) => {\n                  if (value === \'\') {\n                    callback(new Error(\'请输入密码\'));\n                  } else {\n                    if (this.ruleForm2.checkPass !== \'\') {\n                      this.$refs.ruleForm2.validateField(\'checkPass\');\n                    }\n                    callback();\n                  }\n                };\n                var validatePass2 = (rule, value, callback) => {\n                  if (value === \'\') {\n                    callback(new Error(\'请再次输入密码\'));\n                  } else if (value !== this.ruleForm2.pass) {\n                    callback(new Error(\'两次输入密码不一致!\'));\n                  } else {\n                    callback();\n                  }\n                };\n                return {\n                  ruleForm2: {\n                    pass: \'\',\n                    checkPass: \'\',\n                    age: \'\'\n                  },\n                  rules2: {\n                    pass: [\n                      { validator: validatePass, trigger: \'blur\' }\n                    ],\n                    checkPass: [\n                      { validator: validatePass2, trigger: \'blur\' }\n                    ],\n                    age: [\n                      { validator: checkAge, trigger: \'blur\' }\n                    ]\n                  }\n                };\n              },\n              methods: {\n                submitForm(formName) {\n                  this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                      alert(\'submit!\');\n                    } else {\n                      console.log(\'error submit!!\');\n                      return false;\n                    }\n                  });\n                },\n                resetForm(formName) {\n                  this.$refs[formName].resetFields();\n                }\n              }\n            }\n          <\/script>'},{title:"动态增减表单项",description:"",codeExplain:"除了在 Form 组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则",code:'\n          <ky-form  :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\n            <ky-form-item\n              prop="email"\n              label="邮箱"\n              :rules="[\n          { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\n          { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: \'blur,change\' }\n        ]"\n            >\n              <ky-input v-model="dynamicValidateForm.email"></ky-input>\n            </ky-form-item>\n            <ky-form-item\n              v-for="(domain, index) in dynamicValidateForm.domains"\n              :label="\'域名\' + index"\n              :key="domain.key"\n              :prop="\'domains.\' + index + \'.value\'"\n              :rules="{\n          required: true, message: \'域名不能为空\', trigger: \'blur\'\n        }"\n            >\n              <ky-input v-model="domain.value"></ky-input><ky-button @click.prevent="removeDomain(domain)">删除</ky-button>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</ky-button>\n              <ky-button @click="addDomain">新增域名</ky-button>\n              <ky-button @click="resetForm(\'dynamicValidateForm\')">重置</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  dynamicValidateForm: {\n                    domains: [{\n                      value: \'\'\n                    }],\n                    email: \'\'\n                  }\n                };\n              },\n              methods: {\n                submitForm(formName) {\n                  this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                      alert(\'submit!\');\n                    } else {\n                      console.log(\'error submit!!\');\n                      return false;\n                    }\n                  });\n                },\n                resetForm(formName) {\n                  this.$refs[formName].resetFields();\n                },\n                removeDomain(item) {\n                  var index = this.dynamicValidateForm.domains.indexOf(item)\n                  if (index !== -1) {\n                    this.dynamicValidateForm.domains.splice(index, 1)\n                  }\n                },\n                addDomain() {\n                  this.dynamicValidateForm.domains.push({\n                    value: \'\',\n                    key: Date.now()\n                  });\n                }\n              }\n            }\n          <\/script>'},{title:"数字类型验证",description:"",codeExplain:"数字类型的验证需要在 v-model 处加上 .number 的修饰符，这是 Vue 自身提供的用于将绑定值\n          转化为 number 类型的修饰符。",code:'\n          <ky-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\n            <ky-form-item\n              label="年龄"\n              prop="age"\n              :rules="[\n          { required: true, message: \'年龄不能为空\'},\n          { type: \'number\', message: \'年龄必须为数字值\'}\n        ]"\n            >\n              <ky-input type="age" v-model.number="numberValidateForm.age" auto-complete="off"></ky-input>\n            </ky-form-item>\n            <ky-form-item>\n              <ky-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</ky-button>\n              <ky-button @click="resetForm(\'numberValidateForm\')">重置</ky-button>\n            </ky-form-item>\n          </ky-form>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  numberValidateForm: {\n                    age: \'\'\n                  }\n                };\n              },\n              methods: {\n                submitForm(formName) {\n                  this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                      alert(\'submit!\');\n                    } else {\n                      console.log(\'error submit!!\');\n                      return false;\n                    }\n                  });\n                },\n                resetForm(formName) {\n                  this.$refs[formName].resetFields();\n                }\n              }\n            }\n          <\/script>'}],serveData:[{titleName:"",introduce:"",content:"嵌套在 ky-form-item 中的 ky-form-item 标签宽度默认为零，不会继承 ky-form 的 label-width。如果需要可以为其单独设置 label-width 属性。"}],tableData1:[{params:"model",mark:"表单数据对象",type:"object",available_value:"—",default_value:"—"},{params:"rules",mark:"表单验证规则",type:"object",available_value:"—",default_value:"—"},{params:"inline",mark:"行内表单模式",type:"boolean",available_value:"—",default_value:"false"},{params:"label-position",mark:"表单域标签的位置",type:"string",available_value:"right/left/top",default_value:"right"},{params:"label-width",mark:"自定义类名",type:"string",available_value:"—",default_value:"—"},{params:"label-suffix",mark:"表单域标签的后缀",type:"string",available_value:"—",default_value:"—"},{params:"show-message",mark:"是否显示校验错误信息",type:"boolean",available_value:"—",default_value:"false"}],tableData2:[{eventName:"validate",mark:"对整个表单进行校验的方法",params:"Function(callback: Function(boolean))"},{eventName:"validateField",mark:"对部分表单字段进行校验的方法",params:"Function(prop: string, callback: Function(errorMessage: string))"},{eventName:"resetFields",mark:"对整个表单进行重置，将所有字段值重置为初始值并移除校验结果",params:"-"}],tableData3:[{params:"prop",mark:"表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的",type:"string",available_value:"传入 Form 组件的 model 中的字段",default_value:"—"},{params:"label",mark:"标签文本",type:"\tstring",available_value:"—",default_value:"—"},{params:"label-width",mark:'表单域标签的的宽度，例如 "50px"',type:"string",available_value:"—",default_value:"—"},{params:"required",mark:"是否必填，如不设置，则会根据校验规则自动生成",type:"boolean",available_value:"—",default_value:"false"},{params:"rules",mark:"表单验证规则",type:"object",available_value:"—",default_value:"—"},{params:"error",mark:"表单域验证错误信息, 设置该值会使表单验证状态变为error，并显示该错误信息",type:"string",available_value:"—",default_value:"—"},{params:"show-message",mark:"是否显示校验错误信息",type:"boolean",available_value:"—",default_value:"false"}],tableData4:[{name:"—",mark:"Form Item 的内容"},{name:"label",mark:"标签文本的内容"}]}},methods:{submitForm:function(e){this.$refs[e].validate(function(e){if(!e)return console.log("error submit!!"),!1;alert("submit!")})},resetForm:function(e){this.$refs[e].resetFields()},removeDomain:function(e){var n=this.dynamicValidateForm.domains.indexOf(e);-1!==n&&this.dynamicValidateForm.domains.splice(n,1)},addDomain:function(){this.dynamicValidateForm.domains.push({value:"",key:Date.now()})}},components:{codeBox:i.default,textBox:s.default}}},709:function(e,n,o){e.exports={default:o(710),__esModule:!0}},710:function(e,n,o){o(712),e.exports=o(8).Number.isInteger},711:function(e,n,o){var t=o(31),r=Math.floor;e.exports=function(e){return!t(e)&&isFinite(e)&&r(e)===e}},712:function(e,n,o){var t=o(20);t(t.S,"Number",{isInteger:o(711)})},729:function(e,n,o){o(778);var t=o(2)(o(693),o(748),null,null);t.options.__file="/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/business/form/src/main.vue",t.esModule&&Object.keys(t.esModule).some(function(e){return"default"!==e&&"__esModule"!==e})&&console.error("named exports are not supported in *.vue files."),t.options.functional&&console.error("[vue-loader] main.vue: functional components are not supported with templates, they should use render functions."),function(){var n=o(0);n.install(o(1),!1),n.compatible&&(e.hot.accept(),e.hot.data?n.reload("data-v-041ed6f4",t.options):n.createRecord("data-v-041ed6f4",t.options))}(),e.exports=t.exports},748:function(e,n,o){e.exports={render:function(){var e=this,n=e.$createElement,o=e._self._c||n;return o("div",[o("h1",[e._v("Form 表单")]),e._v(" "),o("p",[e._v("由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据")]),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[0].title,description:e.codeDemos[0].description,code:e.codeDemos[0].code,codeExplain:e.codeDemos[0].codeExplain}},[o("ky-form",{ref:"form",attrs:{model:e.form,"label-width":"100px"}},[o("ky-form-item",{attrs:{label:"活动名称"}},[o("ky-input",{model:{value:e.form.name,callback:function(n){e.form.name=n},expression:"form.name"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动区域"}},[o("ky-select",{attrs:{placeholder:"请选择活动区域"},model:{value:e.form.region,callback:function(n){e.form.region=n},expression:"form.region"}},[o("ky-option",{attrs:{label:"区域一",value:"shanghai"}}),e._v(" "),o("ky-option",{attrs:{label:"区域二",value:"beijing"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动时间"}},[o("ky-col",{attrs:{span:11}},[o("ky-date-picker",{staticStyle:{width:"100%"},attrs:{type:"date",placeholder:"选择日期"},model:{value:e.form.date1,callback:function(n){e.form.date1=n},expression:"form.date1"}})],1),e._v(" "),o("ky-col",{staticClass:"line",staticStyle:{"text-align":"center"},attrs:{span:2}},[e._v("-")]),e._v(" "),o("ky-col",{attrs:{span:11}},[o("ky-time-picker",{staticStyle:{width:"100%"},attrs:{type:"fixed-time",placeholder:"选择时间"},model:{value:e.form.date2,callback:function(n){e.form.date2=n},expression:"form.date2"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动性质"}},[o("ky-checkbox-group",{model:{value:e.form.type,callback:function(n){e.form.type=n},expression:"form.type"}},[o("ky-checkbox",{attrs:{label:"美食/餐厅线上活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"地推活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"线下主题活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"单纯品牌曝光",name:"type"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"特殊资源"}},[o("ky-radio-group",{model:{value:e.form.resource,callback:function(n){e.form.resource=n},expression:"form.resource"}},[o("ky-radio",{attrs:{label:"线上品牌商赞助"}}),e._v(" "),o("ky-radio",{attrs:{label:"线下场地免费"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动形式"}},[o("ky-input",{attrs:{type:"textarea"},model:{value:e.form.desc,callback:function(n){e.form.desc=n},expression:"form.desc"}})],1),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:e.onSubmit}},[e._v("立即创建")]),e._v(" "),o("ky-button",[e._v("取消")])],1)],1)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[1].title,description:e.codeDemos[1].description,code:e.codeDemos[1].code,codeExplain:e.codeDemos[1].codeExplain}},[o("ky-form",{staticClass:"demo-form-inline",attrs:{inline:!0,model:e.formInline}},[o("ky-form-item",{attrs:{label:"审批人"}},[o("ky-input",{attrs:{placeholder:"审批人"},model:{value:e.formInline.user,callback:function(n){e.formInline.user=n},expression:"formInline.user"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动区域"}},[o("ky-select",{attrs:{placeholder:"活动区域"},model:{value:e.formInline.region,callback:function(n){e.formInline.region=n},expression:"formInline.region"}},[o("ky-option",{attrs:{label:"区域一",value:"shanghai"}}),e._v(" "),o("ky-option",{attrs:{label:"区域二",value:"beijing"}})],1)],1),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:e.onSubmit}},[e._v("查询")])],1)],1)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[2].title,description:e.codeDemos[2].description,code:e.codeDemos[2].code,codeExplain:e.codeDemos[2].codeExplain}},[o("ky-radio-group",{attrs:{size:"small"},model:{value:e.labelPosition,callback:function(n){e.labelPosition=n},expression:"labelPosition"}},[o("ky-radio-button",{attrs:{label:"left"}},[e._v("左对齐")]),e._v(" "),o("ky-radio-button",{attrs:{label:"right"}},[e._v("右对齐")]),e._v(" "),o("ky-radio-button",{attrs:{label:"top"}},[e._v("顶部对齐")])],1),e._v(" "),o("div",{staticStyle:{margin:"20px"}}),e._v(" "),o("ky-form",{attrs:{"label-position":e.labelPosition,"label-width":"80px",model:e.formLabelAlign}},[o("ky-form-item",{attrs:{label:"名称"}},[o("ky-input",{model:{value:e.formLabelAlign.name,callback:function(n){e.formLabelAlign.name=n},expression:"formLabelAlign.name"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动区域"}},[o("ky-input",{model:{value:e.formLabelAlign.region,callback:function(n){e.formLabelAlign.region=n},expression:"formLabelAlign.region"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动形式"}},[o("ky-input",{model:{value:e.formLabelAlign.type,callback:function(n){e.formLabelAlign.type=n},expression:"formLabelAlign.type"}})],1)],1)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[3].title,description:e.codeDemos[3].description,code:e.codeDemos[3].code,codeExplain:e.codeDemos[3].codeExplain}},[o("ky-form",{ref:"ruleForm",staticClass:"demo-ruleForm",attrs:{model:e.ruleForm,rules:e.rules,"label-width":"100px"}},[o("ky-form-item",{attrs:{label:"活动名称",prop:"name"}},[o("ky-input",{model:{value:e.ruleForm.name,callback:function(n){e.ruleForm.name=n},expression:"ruleForm.name"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动区域",prop:"region"}},[o("ky-select",{attrs:{placeholder:"请选择活动区域"},model:{value:e.ruleForm.region,callback:function(n){e.ruleForm.region=n},expression:"ruleForm.region"}},[o("ky-option",{attrs:{label:"区域一",value:"shanghai"}}),e._v(" "),o("ky-option",{attrs:{label:"区域二",value:"beijing"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动时间",required:""}},[o("ky-col",{attrs:{span:11}},[o("ky-form-item",{attrs:{prop:"date1"}},[o("ky-date-picker",{staticStyle:{width:"100%"},attrs:{type:"date",placeholder:"选择日期"},model:{value:e.ruleForm.date1,callback:function(n){e.ruleForm.date1=n},expression:"ruleForm.date1"}})],1)],1),e._v(" "),o("ky-col",{staticClass:"line",staticStyle:{"text-align":"center"},attrs:{span:2}},[e._v("-")]),e._v(" "),o("ky-col",{attrs:{span:11}},[o("ky-form-item",{attrs:{prop:"date2"}},[o("ky-time-picker",{staticStyle:{width:"100%"},attrs:{type:"fixed-time",placeholder:"选择时间"},model:{value:e.ruleForm.date2,callback:function(n){e.ruleForm.date2=n},expression:"ruleForm.date2"}})],1)],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动性质",prop:"type"}},[o("ky-checkbox-group",{model:{value:e.ruleForm.type,callback:function(n){e.ruleForm.type=n},expression:"ruleForm.type"}},[o("ky-checkbox",{attrs:{label:"美食/餐厅线上活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"地推活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"线下主题活动",name:"type"}}),e._v(" "),o("ky-checkbox",{attrs:{label:"单纯品牌曝光",name:"type"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"特殊资源",prop:"resource"}},[o("ky-radio-group",{model:{value:e.ruleForm.resource,callback:function(n){e.ruleForm.resource=n},expression:"ruleForm.resource"}},[o("ky-radio",{attrs:{label:"线上品牌商赞助"}}),e._v(" "),o("ky-radio",{attrs:{label:"线下场地免费"}})],1)],1),e._v(" "),o("ky-form-item",{attrs:{label:"活动形式",prop:"desc"}},[o("ky-input",{attrs:{type:"textarea"},model:{value:e.ruleForm.desc,callback:function(n){e.ruleForm.desc=n},expression:"ruleForm.desc"}})],1),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:function(n){e.submitForm("ruleForm")}}},[e._v("立即创建")]),e._v(" "),o("ky-button",{on:{click:function(n){e.resetForm("ruleForm")}}},[e._v("重置")])],1)],1)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[4].title,description:e.codeDemos[4].description,code:e.codeDemos[4].code,codeExplain:e.codeDemos[4].codeExplain}},[o("ky-form",{ref:"ruleForm2",staticClass:"demo-ruleForm",attrs:{model:e.ruleForm2,rules:e.rules2,"label-width":"100px"}},[o("ky-form-item",{attrs:{label:"密码",prop:"pass"}},[o("ky-input",{attrs:{type:"password","auto-complete":"off"},model:{value:e.ruleForm2.pass,callback:function(n){e.ruleForm2.pass=n},expression:"ruleForm2.pass"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"确认密码",prop:"checkPass"}},[o("ky-input",{attrs:{type:"password","auto-complete":"off"},model:{value:e.ruleForm2.checkPass,callback:function(n){e.ruleForm2.checkPass=n},expression:"ruleForm2.checkPass"}})],1),e._v(" "),o("ky-form-item",{attrs:{label:"年龄",prop:"age"}},[o("ky-input",{model:{value:e.ruleForm2.age,callback:function(n){e.ruleForm2.age=e._n(n)},expression:"ruleForm2.age"}})],1),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:function(n){e.submitForm("ruleForm2")}}},[e._v("提交")]),e._v(" "),o("ky-button",{on:{click:function(n){e.resetForm("ruleForm2")}}},[e._v("重置")])],1)],1)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[5].title,description:e.codeDemos[5].description,code:e.codeDemos[5].code,codeExplain:e.codeDemos[5].codeExplain}},[o("ky-form",{ref:"dynamicValidateForm",staticClass:"demo-dynamic",attrs:{model:e.dynamicValidateForm,"label-width":"100px"}},[o("ky-form-item",{attrs:{prop:"email",label:"邮箱",rules:[{required:!0,message:"请输入邮箱地址",trigger:"blur"},{type:"email",message:"请输入正确的邮箱地址",trigger:"blur,change"}]}},[o("ky-input",{model:{value:e.dynamicValidateForm.email,callback:function(n){e.dynamicValidateForm.email=n},expression:"dynamicValidateForm.email"}})],1),e._v(" "),e._l(e.dynamicValidateForm.domains,function(n,t){return o("ky-form-item",{key:n.key,attrs:{label:"域名"+t,prop:"domains."+t+".value",rules:{required:!0,message:"域名不能为空",trigger:"blur"}}},[o("ky-input",{model:{value:n.value,callback:function(e){n.value=e},expression:"domain.value"}}),o("ky-button",{on:{click:function(o){o.preventDefault(),e.removeDomain(n)}}},[e._v("删除")])],1)}),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:function(n){e.submitForm("dynamicValidateForm")}}},[e._v("提交")]),e._v(" "),o("ky-button",{on:{click:e.addDomain}},[e._v("新增域名")]),e._v(" "),o("ky-button",{on:{click:function(n){e.resetForm("dynamicValidateForm")}}},[e._v("重置")])],1)],2)],1),e._v(" "),o("code-box",{attrs:{title:e.codeDemos[6].title,description:e.codeDemos[6].description,code:e.codeDemos[6].code,codeExplain:e.codeDemos[6].codeExplain}},[o("ky-form",{ref:"numberValidateForm",staticClass:"demo-ruleForm",attrs:{model:e.numberValidateForm,"label-width":"100px"}},[o("ky-form-item",{attrs:{label:"年龄",prop:"age",rules:[{required:!0,message:"年龄不能为空"},{type:"number",message:"年龄必须为数字值"}]}},[o("ky-input",{attrs:{type:"age","auto-complete":"off"},model:{value:e.numberValidateForm.age,callback:function(n){e.numberValidateForm.age=e._n(n)},expression:"numberValidateForm.age"}})],1),e._v(" "),o("ky-form-item",[o("ky-button",{attrs:{type:"primary"},on:{click:function(n){e.submitForm("numberValidateForm")}}},[e._v("提交")]),e._v(" "),o("ky-button",{on:{click:function(n){e.resetForm("numberValidateForm")}}},[e._v("重置")])],1)],1)],1),e._v(" "),o("text-box",{attrs:{titleName:e.serveData[0].titleName,introduce:e.serveData[0].introduce,content:e.serveData[0].content}}),e._v(" "),o("h2",[e._v("Form Attributes")]),e._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData1}},[o("ky-table-column",{attrs:{prop:"params",label:"参数",width:"140"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"180"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"type",label:"类型"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"available_value",label:"可选值"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"default_value",label:"默认值"}})],1),e._v(" "),o("h2",[e._v("Form Methods")]),e._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData2}},[o("ky-table-column",{attrs:{prop:"eventName",label:"方法名",width:"140"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"params",label:"参数"}})],1),e._v(" "),o("h2",[e._v("Form-Item Attributes")]),e._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData3}},[o("ky-table-column",{attrs:{prop:"params",label:"参数",width:"140"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"180"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"type",label:"类型"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"available_value",label:"可选值"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"default_value",label:"默认值"}})],1),e._v(" "),o("h2",[e._v("Form-Item Slot")]),e._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData4}},[o("ky-table-column",{attrs:{prop:"name",label:"name"}}),e._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明"}})],1)],1)},staticRenderFns:[]},e.exports.render._withStripped=!0,e.hot.accept(),e.hot.data&&o(0).rerender("data-v-041ed6f4",e.exports)},778:function(e,n,o){var t=o(660);"string"==typeof t&&(t=[[e.i,t,""]]),t.locals&&(e.exports=t.locals);var r=o(4)("c5988bf0",t,!1);t.locals||e.hot.accept(660,function(){var n=o(660);"string"==typeof n&&(n=[[e.i,n,""]]),r(n)}),e.hot.dispose(function(){r()})}});