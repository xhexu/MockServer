webpackJsonp([15],{622:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=o(722),a=function(n){return n&&n.__esModule?n:{default:n}}(t);e.default=a.default},647:function(n,e,o){e=n.exports=o(3)(),e.push([n.i,"\nh2[data-v-35da2094]{\n  font-size: 24px;\n  color:#333;\n  font-weight: 400;\n}\np[data-v-35da2094]{\n  font-size: 16px;\n  color:#666\n}\n.codeInput textarea[data-v-35da2094]{\n  background-color: #f9fafc;\n  border-radius: 0;\n}\n.demo[data-v-35da2094]{\n  margin-bottom: 0 !important;\n  padding: 30px;\n  border: 1px solid #eaeefb;\n}\n.demo-area.hover[data-v-35da2094]{\n  box-shadow: 0 0 8px 0 rgba(232,237,250,.6), 0 2px 4px 0 rgba(232,237,250,.5);\n}\n.expand_area[data-v-35da2094] {\n  border-width: 0 1px;\n  border-style: solid;\n  border-color: #eaeefb;\n  background-color: #faf9fc;\n  border-bottom: 1px solid #eaeefb;\n  margin-bottom: 0 !important;\n}\n.expend[data-v-35da2094]{\n  border: 1px solid #eaeefb;\n  border-top: none;\n  text-align: center;\n  font-size: 14px;\n  padding: 10px;\n  color: #ccc;\n  cursor: pointer;\n}\n.demo-area.hover .expend[data-v-35da2094]{\n  color: #999;\n}\n.expend .ky-icon-arrow-down[data-v-35da2094]{\n  margin-right: 7px;\n  transition: .3s transform;\n}\n.demo-area.hover .expend[data-v-35da2094]:hover{\n  color: #20a0ff !important;\n  background-color: #f9fafc;\n}\n","",{version:3,sources:["/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/codeBox/src/main.vue?77744bfe"],names:[],mappings:";AAmDA;EACA,gBAAA;EACA,WAAA;EACA,iBAAA;CACA;AACA;EACA,gBAAA;EACA,UAAA;CACA;AACA;EACA,0BAAA;EACA,iBAAA;CACA;AACA;EACA,4BAAA;EACA,cAAA;EACA,0BAAA;CACA;AAEA;EACA,6EAAA;CACA;AAEA;EACA,oBAAA;EACA,oBAAA;EACA,sBAAA;EACA,0BAAA;EACA,iCAAA;EACA,4BAAA;CACA;AAEA;EACA,0BAAA;EACA,iBAAA;EACA,mBAAA;EACA,gBAAA;EACA,cAAA;EACA,YAAA;EACA,gBAAA;CACA;AACA;EACA,YAAA;CACA;AACA;EACA,kBAAA;EACA,0BAAA;CACA;AAEA;EACA,0BAAA;EACA,0BAAA;CACA",file:"main.vue",sourcesContent:['<template>\n  <div>\n    \x3c!--标题 s--\x3e\n    <h2>{{title}}</h2>\n    \x3c!--描述 s--\x3e\n    <p>{{description}}</p>\n    \x3c!--效果展示 s--\x3e\n    <div class="demo-area" @mouseenter="hover = true" @mouseleave="hover = false" :class="[hover && \'hover\']">\n      <ky-row class="demo">\n        <slot></slot>\n      </ky-row>\n      \x3c!--代码展示 s--\x3e\n      <ky-row v-if="isExpend" class="expand_area">\n        \x3c!--代码 s--\x3e\n        <ky-col :span="16" style="border-right: 1px solid #eaeefb;padding: 0 10px">\n          <pre style="overflow: auto;font-size: 15px;font-family: Menlo,Monaco,Consolas,Courier,monospace; line-height: 24px;color: #5e6d82">{{code}}</pre>\n        </ky-col>\n        \x3c!--解释 s--\x3e\n        <ky-col :span="8" style="font-size: 14px;padding: 10px;line-height: 24px;color: #5e6d82">\n          {{codeExplain}}\n        </ky-col>\n      </ky-row>\n      \x3c!--展开收起 s--\x3e\n      <ky-row class="expend">\n        <div @click="doExpend"><i class="ky-icon-arrow-down" :style="{transform : isExpend ? \'rotate(-180deg)\' : \'\'}"></i>{{isExpend ? \'收起代码\' : \'展开代码\'}}</div>\n      </ky-row>\n    </div>\n  </div>\n</template>\n<script>\n  export default {\n    props:[\n      \'title\',\n      \'description\',\n      \'code\',\n      \'codeExplain\'\n    ],\n    data(){\n      return{\n        isExpend:false,\n        hover: false\n      }\n    },\n    methods: {\n      doExpend: function () {\n        this.isExpend = !this.isExpend\n      }\n    }\n  }\n<\/script>\n<style scoped>\n  h2{\n    font-size: 24px;\n    color:#333;\n    font-weight: 400;\n  }\n  p{\n    font-size: 16px;\n    color:#666\n  }\n  .codeInput textarea{\n    background-color: #f9fafc;\n    border-radius: 0;\n  }\n  .demo{\n    margin-bottom: 0 !important;\n    padding: 30px;\n    border: 1px solid #eaeefb;\n  }\n\n  .demo-area.hover{\n    box-shadow: 0 0 8px 0 rgba(232,237,250,.6), 0 2px 4px 0 rgba(232,237,250,.5);\n  }\n\n  .expand_area {\n    border-width: 0 1px;\n    border-style: solid;\n    border-color: #eaeefb;\n    background-color: #faf9fc;\n    border-bottom: 1px solid #eaeefb;\n    margin-bottom: 0 !important;\n  }\n\n  .expend{\n    border: 1px solid #eaeefb;\n    border-top: none;\n    text-align: center;\n    font-size: 14px;\n    padding: 10px;\n    color: #ccc;\n    cursor: pointer;\n  }\n  .demo-area.hover .expend{\n    color: #999;\n  }\n  .expend .ky-icon-arrow-down{\n    margin-right: 7px;\n    transition: .3s transform;\n  }\n\n  .demo-area.hover .expend:hover{\n    color: #20a0ff !important;\n    background-color: #f9fafc;\n  }\n</style>\n'],sourceRoot:""}])},648:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=o(650),a=function(n){return n&&n.__esModule?n:{default:n}}(t);e.default=a.default},649:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default={props:["title","description","code","codeExplain"],data:function(){return{isExpend:!1,hover:!1}},methods:{doExpend:function(){this.isExpend=!this.isExpend}}}},650:function(n,e,o){o(652);var t=o(2)(o(649),o(651),"data-v-35da2094",null);t.options.__file="/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/comm/codeBox/src/main.vue",t.esModule&&Object.keys(t.esModule).some(function(n){return"default"!==n&&"__esModule"!==n})&&console.error("named exports are not supported in *.vue files."),t.options.functional&&console.error("[vue-loader] main.vue: functional components are not supported with templates, they should use render functions."),function(){var e=o(0);e.install(o(1),!1),e.compatible&&(n.hot.accept(),n.hot.data?e.reload("data-v-35da2094",t.options):e.createRecord("data-v-35da2094",t.options))}(),n.exports=t.exports},651:function(n,e,o){n.exports={render:function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("div",[o("h2",[n._v(n._s(n.title))]),n._v(" "),o("p",[n._v(n._s(n.description))]),n._v(" "),o("div",{staticClass:"demo-area",class:[n.hover&&"hover"],on:{mouseenter:function(e){n.hover=!0},mouseleave:function(e){n.hover=!1}}},[o("ky-row",{staticClass:"demo"},[n._t("default")],2),n._v(" "),n.isExpend?o("ky-row",{staticClass:"expand_area"},[o("ky-col",{staticStyle:{"border-right":"1px solid #eaeefb",padding:"0 10px"},attrs:{span:16}},[o("pre",{staticStyle:{overflow:"auto","font-size":"15px","font-family":"Menlo,Monaco,Consolas,Courier,monospace","line-height":"24px",color:"#5e6d82"}},[n._v(n._s(n.code))])]),n._v(" "),o("ky-col",{staticStyle:{"font-size":"14px",padding:"10px","line-height":"24px",color:"#5e6d82"},attrs:{span:8}},[n._v("\n        "+n._s(n.codeExplain)+"\n      ")])],1):n._e(),n._v(" "),o("ky-row",{staticClass:"expend"},[o("div",{on:{click:n.doExpend}},[o("i",{staticClass:"ky-icon-arrow-down",style:{transform:n.isExpend?"rotate(-180deg)":""}}),n._v(n._s(n.isExpend?"收起代码":"展开代码"))])])],1)])},staticRenderFns:[]},n.exports.render._withStripped=!0,n.hot.accept(),n.hot.data&&o(0).rerender("data-v-35da2094",n.exports)},652:function(n,e,o){var t=o(647);"string"==typeof t&&(t=[[n.i,t,""]]),t.locals&&(n.exports=t.locals);var a=o(4)("09990345",t,!1);t.locals||n.hot.accept(647,function(){var e=o(647);"string"==typeof e&&(e=[[n.i,e,""]]),a(e)}),n.hot.dispose(function(){a()})},680:function(n,e,o){e=n.exports=o(3)(),e.push([n.i,"\n.ky-col[data-v-b0bbbf4a] {\n    text-align: center;\n    border-right: 1px solid #ccc;\n}\n.ky-col[data-v-b0bbbf4a]:last-child {\n    border-right: 0;\n}\n.description[data-v-b0bbbf4a] {\n    margin-bottom: 15px;\n    color: #afafaf;\n}\n.combobox-des[data-v-b0bbbf4a] {\n    margin: 45px 0 15px;\n}\n","",{version:3,sources:["/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/business/combobox/src/main.vue?2fdd15b5"],names:[],mappings:";AAuzBA;IACA,mBAAA;IACA,6BAAA;CACA;AAEA;IACA,gBAAA;CACA;AAEA;IACA,oBAAA;IACA,eAAA;CACA;AACA;IACA,oBAAA;CACA",file:"main.vue",sourcesContent:["<template>\n    <div>\n        <h1>Combobox 组合框</h1>\n        <p></p>\n\n        <code-box\n                :title=\"codeDemos[0].title\"\n                :description=\"codeDemos[0].description\"\n                :code=\"codeDemos[0].code\"\n                :codeExplain=\"codeDemos[0].codeExplain\">\n            <ky-combobox v-model=\"combobox1.value\" :config=\"combobox1.config\"></ky-combobox>\n        </code-box>\n\n        <code-box\n                :title=\"codeDemos[1].title\"\n                :description=\"codeDemos[1].description\"\n                :code=\"codeDemos[1].code\"\n                :codeExplain=\"codeDemos[1].codeExplain\">\n            <ky-combobox v-model=\"combobox2.value\" :config=\"combobox2.config\"></ky-combobox>\n        </code-box>\n\n        <code-box\n                :title=\"codeDemos[2].title\"\n                :description=\"codeDemos[2].description\"\n                :code=\"codeDemos[2].code\"\n                :codeExplain=\"codeDemos[2].codeExplain\">\n            <ky-combobox v-model=\"combobox3.value\" :config=\"combobox3.config\"></ky-combobox>\n        </code-box>\n\n        <code-box\n                :title=\"codeDemos[3].title\"\n                :description=\"codeDemos[3].description\"\n                :code=\"codeDemos[3].code\"\n                :codeExplain=\"codeDemos[3].codeExplain\">\n            <ky-combobox v-model=\"combobox4.value\" :config=\"combobox4.config\"></ky-combobox>\n        </code-box>\n\n\n        <code-box\n                :title=\"codeDemos[4].title\"\n                :description=\"codeDemos[4].description\"\n                :code=\"codeDemos[4].code\"\n                :codeExplain=\"codeDemos[4].codeExplain\">\n                <ky-select\n                        v-model=\"combobox5.value\"\n                        filterable\n                        remote\n                        :remote-method=\"remoteMethod\"\n                        :loading=\"combobox5.loading\">\n                    <ky-option\n                            v-for=\"item in combobox5.options\"\n                            :key=\"item.id\"\n                            :label=\"item.text\"\n                            :value=\"item.id\">\n                    </ky-option>\n                </ky-select>\n        </code-box>\n\n        <code-box\n                :title=\"codeDemos[5].title\"\n                :description=\"codeDemos[5].description\"\n                :code=\"codeDemos[5].code\"\n                :codeExplain=\"codeDemos[5].codeExplain\">\n            <ky-combobox v-model=\"combobox6.value\" :config=\"combobox6.config\"></ky-combobox>\n        </code-box>\n        <h2 class=\"combobox-des\">Combobox Attribute</h2>\n        <ky-table\n                :data=\"attribute\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"params\"\n                    label=\"参数\"\n                    width=\"170\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\"\n                    width=\"390\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"type\"\n                    label=\"类型\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"available_value\"\n                    label=\"可选值\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"default_value\"\n                    label=\"默认值\">\n            </ky-table-column>\n        </ky-table>\n\n        <h2 class=\"combobox-des\">config Attributes</h2>\n        <ky-table\n                :data=\"configAttributes\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"params\"\n                    label=\"参数\"\n                    width=\"170\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\"\n                    width=\"400\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"type\"\n                    label=\"类型\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"available_value\"\n                    label=\"可选值\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"default_value\"\n                    label=\"默认值\">\n            </ky-table-column>\n        </ky-table>\n\n        <h2 class=\"combobox-des\">config Events</h2>\n        <ky-table\n                :data=\"configEvents\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"eventName\"\n                    label=\"事件名称\"\n                    width=\"170\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\"\n                    width=\"350\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"cbParams\"\n                    label=\"回调参数\">\n            </ky-table-column>\n        </ky-table>\n\n        <h2 class=\"combobox-des\">request Attributes</h2>\n        <ky-table\n                :data=\"requestAttributes\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"params\"\n                    label=\"参数\"\n                    width=\"200\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\"\n                    width=\"370\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"type\"\n                    label=\"类型\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"available_value\"\n                    label=\"可选值\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"default_value\"\n                    label=\"默认值\">\n            </ky-table-column>\n        </ky-table>\n\n        <h2 class=\"combobox-des\">request Events</h2>\n        <ky-table\n                :data=\"requestEvents\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"eventName\"\n                    label=\"事件名称\"\n                    width=\"170\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\"\n                    width=\"350\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"cbParams\"\n                    label=\"回调参数\">\n            </ky-table-column>\n        </ky-table>\n\n        <h2>config Methods</h2>\n        <ky-table\n                :data=\"configMethodsData\"\n                style=\"width: 100%\">\n            <ky-table-column\n                    prop=\"methodsName\"\n                    label=\"方法名\"\n                    width=\"170\">\n            </ky-table-column>\n            <ky-table-column\n                    prop=\"mark\"\n                    label=\"说明\">\n            </ky-table-column>\n        </ky-table>\n    </div>\n</template>\n<script>\n  import codeBox from '../../../comm/codeBox'\n  export default {\n    data(){\n      return {\n        combobox1: {\n          value: '',\n          config: {\n            label: \"饮料\",\n            data: [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }],\n            width: 200\n          }\n        },\n        combobox2: {\n          value: [],\n          config: {\n            multiple: true,\n            data: [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }],\n            width: 200\n          }\n        },\n        combobox3: {\n          value: '',\n          config: {\n            width: 200,\n            data:  [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }],\n            request: {\n              url:'',\n              params: {\n                is_user_role: false,\n                dept_type: \"U\",\n                sql: ''\n              },\n              onLoadSuccess: function (res) {\n              },\n              onLoadError: function () {\n              }\n            }\n          }\n        },\n        combobox4: {\n          value: '',\n          config: {\n            data: [{\n              id: '选项1',\n              text: 'Alice'\n            }, {\n              id: '选项2',\n              text: 'Bob'\n            }, {\n              id: '选项3',\n              text: 'Betty'\n            }, {\n              id: '选项4',\n              text: 'James'\n            }, {\n              id: '选项5',\n              text: 'Danny'\n            }, {\n              id: '选项6',\n              text: 'Jane'\n            }]\n          }\n        },\n        combobox5: {\n          value: '',\n          options: []\n        },\n        combobox6: {\n          value: '',\n          config: {\n            allowCreate: true,\n            data: [{\n              id: '选项1',\n              text: 'Alice'\n            }, {\n              id: '选项2',\n              text: 'Bob'\n            }, {\n              id: '选项3',\n              text: 'Betty'\n            }, {\n              id: '选项4',\n              text: 'James'\n            }, {\n              id: '选项5',\n              text: 'Danny'\n            }, {\n              id: '选项6',\n              text: 'Jane'\n            }]\n          }\n        },\n        codeDemos: [\n          {\n            title: '基础单选',\n            description: '单选且指定静态数据',\n            codeExplain: `建议使用对象的方式设置value和config属性，此时v-model的值为当前选中值。`,\n            code:\n        `\n  <ky-combobox v-model=\"combobox1.value\":config=\"combobox1.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox1: {\n            value: '',\n            config: {\n              data: [{\n                id: '选项1',\n                text: '水'\n              }, {\n                id: '选项2',\n                text: '茶叶'\n              }, {\n                id: '选项3',\n                text: '奶茶'\n              }, {\n                id: '选项4',\n                text: '咖啡'\n              }],\n              width: 150\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`\n          },{\n            title: '基础多选',\n            description: '多选且指定静态数据',\n            codeExplain: `设置config的multiple属性为true既可启用多选，此时v-model的值为当前选中值所组成的数组。`,\n            code:`\n  <ky-combobox v-model=\"combobox2.value\":config=\"combobox2.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox2: {\n            value: [],\n            config: {\n              multiple: true,\n              data: [{\n                id: '选项1',\n                text: '水'\n              }, {\n                id: '选项2',\n                text: '茶叶'\n              }, {\n                id: '选项3',\n                text: '奶茶'\n              }, {\n                id: '选项4',\n                text: '咖啡'\n              }],\n              width: 200\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`\n          },{\n            title: '远程加载数据',\n            description: '从服务器端获取数据',\n            codeExplain: `设置config的request属性（对象）以从服务器端加载数据。这里假设后端返回的数据为： [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }]`,\n            code:`\n  <ky-combobox v-model=\"combobox3.value\" :config=\"combobox3.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox3: {\n            value: '',\n            config: {\n              multiple: true,\n              request: {\n                url:'',\n                params: {\n                    is_user_role: false,\n                    dept_type: \"U\",\n                    sql: ''\n                },\n                onLoadSuccess: function (res) {},\n                onLoadError: function () {}\n              }\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`\n          },{\n            title: '可搜索',\n            description: '利用输入关键字快速查找选项',\n            codeExplain: `设置config的filterable属性为true既可启用搜索功能。默认的搜索规则是找出所有text域包含输入值的选项，不区分大小写。用户也可通过设置config的filterMethod属性自定义搜索逻辑。它会在输入值发生变化时调用，参数为当前输入值。`,\n            code:`\n  <ky-combobox v-model=\"combobox4.value\" :config=\"combobox4.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox4: {\n            value: '',\n            config: {\n              data: [{\n                id: '选项1',\n                text: 'Alice'\n              }, {\n                id: '选项2',\n                text: 'Bob'\n              }, {\n                id: '选项3',\n                text: 'Betty'\n              }, {\n                id: '选项4',\n                text: 'James'\n              }, {\n                id: '选项5',\n                text: 'Danny'\n              }, {\n                id: '选项6',\n                text: 'Jane'\n              }]\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`\n          },{\n            title: '远程搜索',\n            description: '根据输入关键字从服务器搜索数据',\n            codeExplain: `将config的filterable和remote属性设置为true，便启用远程搜索功能。在输入值发生变化时会向服务器端发送请求以获取数据，搜索规则在服务器端定义。这里假设后端的过滤规则是找出所有text域包含前台输入关键字的选项，不区分大小写。假设数据为[{\n                id: '选项1',\n                text: 'Alice'\n              }, {\n                id: '选项2',\n                text: 'Bob'\n              }, {\n                id: '选项3',\n                text: 'Betty'\n              }, {\n                id: '选项4',\n                text: 'James'\n              }, {\n                id: '选项5',\n                text: 'Danny'\n              }, {\n                id: '选项6',\n                text: 'Jane'\n              }]`,\n            code:`\n  <ky-combobox v-model=\"combobox5.value\" :config=\"combobox5.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox5: {\n            value: '',\n            config: {\n              remote: true,\n              request: {\n                url:'',\n                params: {\n                    is_user_role: false,\n                    dept_type: \"U\",\n                    sql: ''\n                },\n                queryFieldName: 'query',\n                onLoadSuccess: function (res) {},\n                onLoadError: function () {}\n              }\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`\n          },{\n            title: '创建条目',\n            description: '可以创建并选中选项中不存在的条目',\n            codeExplain:'使用allow-create属性即可通过在输入框中输入文字来创建新的条目。注意此时filterable必须为真。',\n            code:`\n  <ky-combobox v-model=\"combobox6.value\" :config=\"combobox6.config\">\n  </ky-combobox>\n  <script>\n    export default {\n      data() {\n        return {\n          combobox6: {\n            value: '',\n            config: {\n              allowCreate: true,\n              data: [{\n                id: '选项1',\n                text: 'Alice'\n              }, {\n                id: '选项2',\n                text: 'Bob'\n              }, {\n                id: '选项3',\n                text: 'Betty'\n              }, {\n                id: '选项4',\n                text: 'James'\n              }, {\n                id: '选项5',\n                text: 'Danny'\n              }, {\n                id: '选项6',\n                text: 'Jane'\n              }]\n            }\n          }\n        };\n      }\n    };\n  <\\/script>`}],\n        attribute: [{\n          params: 'config',\n          mark: '可配置项，具体参数见下表',\n          type: 'object',\n          available_value: '-',\n          default_value: '-'\n        }],\n        configAttributes:[{\n            params: 'label',\n            mark: '为ky-combobox定义标注',\n            type: 'string',\n            available_value: '-',\n            default_value: '-'\n          },{\n          params: 'valueField',\n          mark: '指明数据中的哪一项为可选项的value域',\n          type: 'string',\n          available_value: '-',\n          default_value: '\"id\"'\n        }, {\n          params: 'textField',\n          mark: '指明数据中的哪一项为可选项的text域',\n          type: 'string',\n          available_value: '-',\n          default_value: '\"text\"'\n        }, {\n          params: 'multiple',\n          mark: '是否多选',\n          type: 'boolean',\n          available_value: '-',\n          default_value: 'false'\n        },{\n          params: 'multipleLimit',\n          mark: '多选时用户最多可以选择的项目数，为 0 则不限制',\n          type: 'number',\n          available_value: '-',\n          default_value: '0'\n        }, {\n          params: 'disabled',\n          mark: '是否禁用',\n          type: 'boolean',\n          available_value: '-',\n          default_value: 'false'\n        }, {\n          params: 'placeholder',\n          mark: '占位符',\n          type: 'string',\n          available_value: '-',\n          default_value: '请选择'\n        }, {\n          params: 'width',\n          mark: '输入框的宽度',\n          type: 'number',\n          available_value: '-',\n          default_value: '-'\n        }, {\n          params: 'data',\n          mark: '手动设置的菜单项数据，格式为：' +\n          '[{' +\n          'id: \\'选项1\\',\\n' +\n          'text: \\'水\\'\\n' +\n          '}, {\\n' +\n          'id: \\'选项2\\',\\n' +\n          'text: \\'奶茶\\'\\n' +\n          '}, {\\n' +\n          'id: \\'选项3\\',\\n' +\n          'text: \\'咖啡\\'\\n' +\n          '}]',\n          type: 'object',\n          available_value: '-',\n          default_value: '-'\n        }, {\n          params: 'clearable',\n          mark: '单选时是否可以清空选项',\n          type: 'boolean',\n          available_value: '-',\n          default_value: 'false'\n        }, {\n          params: 'filterable',\n          mark: '是否可根据输入值搜索选项',\n          type: 'boolean',\n          available_value: '-',\n          default_value: 'true'\n        },{\n          params: 'filterMethod',\n          mark: '自定义过滤方法',\n          type: 'function',\n          available_value: '-',\n          default_value: '-'\n        },  {\n          params: 'remote',\n          mark: '是否为远程搜索，即根据用户的输入值向服务器请求数据',\n          type: 'boolean',\n          available_value: '-',\n          default_value: 'false'\n        }, {\n        params: 'request',\n        mark: '动态获取菜单项数据时设置该项，具体参数参考下表',\n        type: 'object',\n        available_value: '-',\n        default_value: '-'\n      }, {\n        params: 'formatter',\n        mark: '对可选项的数据进行格式化的函数，参数为每项对应的数据，格式为:{id: \\'选项1\\',\\n' + 'text: \\'水\\'}',\n        type: 'function',\n        available_value: '-',\n        default_value: '-'\n      },{\n          params: 'name',\n          mark: 'select input 的 name 属性',\n          type: 'string',\n          available_value: '-',\n          default_value: '-'\n        } ,{\n          params: 'noMatchText',\n          mark: '搜索条件无匹配时显示的文字',\n          type: 'string',\n          available_value: '-',\n          default_value: '无匹配数据'\n        }, {\n          params: 'noDataText',\n          mark: '选项为空时显示的文字',\n          type: 'string',\n          available_value: '-',\n          default_value: '无数据'\n        }, {\n          params: 'comboboxClass',\n          mark: 'Combobox 组合框的类名',\n          type: 'string',\n          available_value: '-',\n          default_value: '-'\n        }],\n      configEvents:[ {\n        eventName: 'onChange',\n          mark: '选中值发生变化时的回调',\n          cbParams: '目前选中项的value值'\n        },{\n        eventName: 'onSelect',\n          mark: '多选模式下选中菜单项时的回调',\n        cbParams: '格式为{index：1,value:\\'选项1\\',text:\\'水\\'}，其中index为该项的索引'\n        }, {\n        eventName: 'onUnselect',\n          mark: '多选模式下取消选中某个菜单项时的回调',\n        cbParams: '格式为{index：1,value:\\'选项1\\',text:\\'水\\'}，其中index为该项的索引'\n        }],\n        requestAttributes: [{\n            params: 'url',\n            mark: '获取数据的url',\n            type: 'string',\n            available_value: '-',\n            default_value: '-'\n          },{\n            params: 'params',\n            mark: 'http请求的参数',\n            type: 'object',\n            available_value: '-',\n            default_value: '-'\n          }, {\n            params: 'loadingText',\n            mark: '远程加载时显示的文字',\n            type: 'string',\n            available_value: '-',\n            default_value: '加载中'\n          }, {\n              params: 'queryFieldName',\n              mark: '当使用远程搜索功能时设置该属性，用于指定params中用于存储输入关键字的属性名。',\n              type: 'string',\n              available_value: '-',\n              default_value: '-'\n          }],\n        requestEvents:[ {\n          eventName: 'onLoadSuccess',\n          mark: '数据加载成功时的回调',\n          cbParams: '返回的数据'\n        },{\n          eventName: 'onLoadError',\n          mark: '数据加载失败时的回调',\n          cbParams: '-'\n        }],\n        configMethodsData: [{\n          methodsName: 'getConfig',\n          mark: '获取配置项config'\n        },{\n          methodsName: 'getData',\n          mark: '获取未经处理的原始数据'\n        },{\n          methodsName: 'getOptions',\n          mark: '获取化处理后的数据'\n        },{\n          methodsName: 'reload',\n          mark: '重新从后端获取数据。参数可选，可传入一个url，表示从该url重新获取数据；如果参数为空，表示使用原URL。'\n        },{\n          methodsName: 'select',\n          mark: '选中指定菜单项'\n        }, {\n          methodsName: 'unselect',\n          mark: '取消选中指定菜单项'\n        }]\n      }\n    },\n    methods: {\n      clickParent: function(){\n        //this.value1 = 'aaa';\n        console.log(this.value1);\n       // this.$refs.combobox1.unselect('选项2');\n      },\n      remoteMethod(query) {\n        var list=[{\n          id: '选项1',\n          text: 'Alice'\n        }, {\n          id: '选项2',\n          text: 'Bob'\n        }, {\n          id: '选项3',\n          text: 'Betty'\n        }, {\n          id: '选项4',\n          text: 'James'\n        }, {\n          id: '选项5',\n          text: 'Danny'\n        }, {\n          id: '选项6',\n          text: 'Jane'\n        }];\n      if (query !== '') {\n        this.combobox5.loading = true;\n        setTimeout(() => {\n          this.combobox5.loading = false;\n          this.combobox5.options = list.filter(item => {\n            return item.text.toLowerCase()\n              .indexOf(query.toLowerCase()) > -1;\n          });\n        }, 200);\n      } else {\n        this.combobox5.options = [];\n      }\n    }\n    },\n    components: {\n      codeBox\n    }\n  }\n<\/script>\n<style scoped>\n    .ky-col {\n        text-align: center;\n        border-right: 1px solid #ccc;\n    }\n\n    .ky-col:last-child {\n        border-right: 0;\n    }\n\n    .description {\n        margin-bottom: 15px;\n        color: #afafaf;\n    }\n    .combobox-des {\n        margin: 45px 0 15px;\n    }\n</style>"],sourceRoot:""}])},686:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var t=o(648),a=function(n){return n&&n.__esModule?n:{default:n}}(t);e.default={data:function(){return{combobox1:{value:"",config:{label:"饮料",data:[{id:"选项1",text:"水"},{id:"选项2",text:"茶叶"},{id:"选项3",text:"奶茶"},{id:"选项4",text:"咖啡"}],width:200}},combobox2:{value:[],config:{multiple:!0,data:[{id:"选项1",text:"水"},{id:"选项2",text:"茶叶"},{id:"选项3",text:"奶茶"},{id:"选项4",text:"咖啡"}],width:200}},combobox3:{value:"",config:{width:200,data:[{id:"选项1",text:"水"},{id:"选项2",text:"茶叶"},{id:"选项3",text:"奶茶"},{id:"选项4",text:"咖啡"}],request:{url:"",params:{is_user_role:!1,dept_type:"U",sql:""},onLoadSuccess:function(n){},onLoadError:function(){}}}},combobox4:{value:"",config:{data:[{id:"选项1",text:"Alice"},{id:"选项2",text:"Bob"},{id:"选项3",text:"Betty"},{id:"选项4",text:"James"},{id:"选项5",text:"Danny"},{id:"选项6",text:"Jane"}]}},combobox5:{value:"",options:[]},combobox6:{value:"",config:{allowCreate:!0,data:[{id:"选项1",text:"Alice"},{id:"选项2",text:"Bob"},{id:"选项3",text:"Betty"},{id:"选项4",text:"James"},{id:"选项5",text:"Danny"},{id:"选项6",text:"Jane"}]}},codeDemos:[{title:"基础单选",description:"单选且指定静态数据",codeExplain:"建议使用对象的方式设置value和config属性，此时v-model的值为当前选中值。",code:"\n<ky-combobox v-model=\"combobox1.value\":config=\"combobox1.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox1: {\n          value: '',\n          config: {\n            data: [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }],\n            width: 150\n          }\n        }\n      };\n    }\n  };\n<\/script>"},{title:"基础多选",description:"多选且指定静态数据",codeExplain:"设置config的multiple属性为true既可启用多选，此时v-model的值为当前选中值所组成的数组。",code:"\n<ky-combobox v-model=\"combobox2.value\":config=\"combobox2.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox2: {\n          value: [],\n          config: {\n            multiple: true,\n            data: [{\n              id: '选项1',\n              text: '水'\n            }, {\n              id: '选项2',\n              text: '茶叶'\n            }, {\n              id: '选项3',\n              text: '奶茶'\n            }, {\n              id: '选项4',\n              text: '咖啡'\n            }],\n            width: 200\n          }\n        }\n      };\n    }\n  };\n<\/script>"},{title:"远程加载数据",description:"从服务器端获取数据",codeExplain:"设置config的request属性（对象）以从服务器端加载数据。这里假设后端返回的数据为： [{\n            id: '选项1',\n            text: '水'\n          }, {\n            id: '选项2',\n            text: '茶叶'\n          }, {\n            id: '选项3',\n            text: '奶茶'\n          }, {\n            id: '选项4',\n            text: '咖啡'\n          }]",code:"\n<ky-combobox v-model=\"combobox3.value\" :config=\"combobox3.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox3: {\n          value: '',\n          config: {\n            multiple: true,\n            request: {\n              url:'',\n              params: {\n                  is_user_role: false,\n                  dept_type: \"U\",\n                  sql: ''\n              },\n              onLoadSuccess: function (res) {},\n              onLoadError: function () {}\n            }\n          }\n        }\n      };\n    }\n  };\n<\/script>"},{title:"可搜索",description:"利用输入关键字快速查找选项",codeExplain:"设置config的filterable属性为true既可启用搜索功能。默认的搜索规则是找出所有text域包含输入值的选项，不区分大小写。用户也可通过设置config的filterMethod属性自定义搜索逻辑。它会在输入值发生变化时调用，参数为当前输入值。",code:"\n<ky-combobox v-model=\"combobox4.value\" :config=\"combobox4.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox4: {\n          value: '',\n          config: {\n            data: [{\n              id: '选项1',\n              text: 'Alice'\n            }, {\n              id: '选项2',\n              text: 'Bob'\n            }, {\n              id: '选项3',\n              text: 'Betty'\n            }, {\n              id: '选项4',\n              text: 'James'\n            }, {\n              id: '选项5',\n              text: 'Danny'\n            }, {\n              id: '选项6',\n              text: 'Jane'\n            }]\n          }\n        }\n      };\n    }\n  };\n<\/script>"},{title:"远程搜索",description:"根据输入关键字从服务器搜索数据",codeExplain:"将config的filterable和remote属性设置为true，便启用远程搜索功能。在输入值发生变化时会向服务器端发送请求以获取数据，搜索规则在服务器端定义。这里假设后端的过滤规则是找出所有text域包含前台输入关键字的选项，不区分大小写。假设数据为[{\n              id: '选项1',\n              text: 'Alice'\n            }, {\n              id: '选项2',\n              text: 'Bob'\n            }, {\n              id: '选项3',\n              text: 'Betty'\n            }, {\n              id: '选项4',\n              text: 'James'\n            }, {\n              id: '选项5',\n              text: 'Danny'\n            }, {\n              id: '选项6',\n              text: 'Jane'\n            }]",code:"\n<ky-combobox v-model=\"combobox5.value\" :config=\"combobox5.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox5: {\n          value: '',\n          config: {\n            remote: true,\n            request: {\n              url:'',\n              params: {\n                  is_user_role: false,\n                  dept_type: \"U\",\n                  sql: ''\n              },\n              queryFieldName: 'query',\n              onLoadSuccess: function (res) {},\n              onLoadError: function () {}\n            }\n          }\n        }\n      };\n    }\n  };\n<\/script>"},{title:"创建条目",description:"可以创建并选中选项中不存在的条目",codeExplain:"使用allow-create属性即可通过在输入框中输入文字来创建新的条目。注意此时filterable必须为真。",code:"\n<ky-combobox v-model=\"combobox6.value\" :config=\"combobox6.config\">\n</ky-combobox>\n<script>\n  export default {\n    data() {\n      return {\n        combobox6: {\n          value: '',\n          config: {\n            allowCreate: true,\n            data: [{\n              id: '选项1',\n              text: 'Alice'\n            }, {\n              id: '选项2',\n              text: 'Bob'\n            }, {\n              id: '选项3',\n              text: 'Betty'\n            }, {\n              id: '选项4',\n              text: 'James'\n            }, {\n              id: '选项5',\n              text: 'Danny'\n            }, {\n              id: '选项6',\n              text: 'Jane'\n            }]\n          }\n        }\n      };\n    }\n  };\n<\/script>"}],attribute:[{params:"config",mark:"可配置项，具体参数见下表",type:"object",available_value:"-",default_value:"-"}],configAttributes:[{params:"label",mark:"为ky-combobox定义标注",type:"string",available_value:"-",default_value:"-"},{params:"valueField",mark:"指明数据中的哪一项为可选项的value域",type:"string",available_value:"-",default_value:'"id"'},{params:"textField",mark:"指明数据中的哪一项为可选项的text域",type:"string",available_value:"-",default_value:'"text"'},{params:"multiple",mark:"是否多选",type:"boolean",available_value:"-",default_value:"false"},{params:"multipleLimit",mark:"多选时用户最多可以选择的项目数，为 0 则不限制",type:"number",available_value:"-",default_value:"0"},{params:"disabled",mark:"是否禁用",type:"boolean",available_value:"-",default_value:"false"},{params:"placeholder",mark:"占位符",type:"string",available_value:"-",default_value:"请选择"},{params:"width",mark:"输入框的宽度",type:"number",available_value:"-",default_value:"-"},{params:"data",mark:"手动设置的菜单项数据，格式为：[{id: '选项1',\ntext: '水'\n}, {\nid: '选项2',\ntext: '奶茶'\n}, {\nid: '选项3',\ntext: '咖啡'\n}]",type:"object",available_value:"-",default_value:"-"},{params:"clearable",mark:"单选时是否可以清空选项",type:"boolean",available_value:"-",default_value:"false"},{params:"filterable",mark:"是否可根据输入值搜索选项",type:"boolean",available_value:"-",default_value:"true"},{params:"filterMethod",mark:"自定义过滤方法",type:"function",available_value:"-",default_value:"-"},{params:"remote",mark:"是否为远程搜索，即根据用户的输入值向服务器请求数据",type:"boolean",available_value:"-",default_value:"false"},{params:"request",mark:"动态获取菜单项数据时设置该项，具体参数参考下表",type:"object",available_value:"-",default_value:"-"},{params:"formatter",mark:"对可选项的数据进行格式化的函数，参数为每项对应的数据，格式为:{id: '选项1',\ntext: '水'}",type:"function",available_value:"-",default_value:"-"},{params:"name",mark:"select input 的 name 属性",type:"string",available_value:"-",default_value:"-"},{params:"noMatchText",mark:"搜索条件无匹配时显示的文字",type:"string",available_value:"-",default_value:"无匹配数据"},{params:"noDataText",mark:"选项为空时显示的文字",type:"string",available_value:"-",default_value:"无数据"},{params:"comboboxClass",mark:"Combobox 组合框的类名",type:"string",available_value:"-",default_value:"-"}],configEvents:[{eventName:"onChange",mark:"选中值发生变化时的回调",cbParams:"目前选中项的value值"},{eventName:"onSelect",mark:"多选模式下选中菜单项时的回调",cbParams:"格式为{index：1,value:'选项1',text:'水'}，其中index为该项的索引"},{eventName:"onUnselect",mark:"多选模式下取消选中某个菜单项时的回调",cbParams:"格式为{index：1,value:'选项1',text:'水'}，其中index为该项的索引"}],requestAttributes:[{params:"url",mark:"获取数据的url",type:"string",available_value:"-",default_value:"-"},{params:"params",mark:"http请求的参数",type:"object",available_value:"-",default_value:"-"},{params:"loadingText",mark:"远程加载时显示的文字",type:"string",available_value:"-",default_value:"加载中"},{params:"queryFieldName",mark:"当使用远程搜索功能时设置该属性，用于指定params中用于存储输入关键字的属性名。",type:"string",available_value:"-",default_value:"-"}],requestEvents:[{eventName:"onLoadSuccess",mark:"数据加载成功时的回调",cbParams:"返回的数据"},{eventName:"onLoadError",mark:"数据加载失败时的回调",cbParams:"-"}],configMethodsData:[{methodsName:"getConfig",mark:"获取配置项config"},{methodsName:"getData",mark:"获取未经处理的原始数据"},{methodsName:"getOptions",mark:"获取化处理后的数据"},{methodsName:"reload",mark:"重新从后端获取数据。参数可选，可传入一个url，表示从该url重新获取数据；如果参数为空，表示使用原URL。"},{methodsName:"select",mark:"选中指定菜单项"},{methodsName:"unselect",mark:"取消选中指定菜单项"}]}},methods:{clickParent:function(){console.log(this.value1)},remoteMethod:function(n){var e=this,o=[{id:"选项1",text:"Alice"},{id:"选项2",text:"Bob"},{id:"选项3",text:"Betty"},{id:"选项4",text:"James"},{id:"选项5",text:"Danny"},{id:"选项6",text:"Jane"}];""!==n?(this.combobox5.loading=!0,setTimeout(function(){e.combobox5.loading=!1,e.combobox5.options=o.filter(function(e){return e.text.toLowerCase().indexOf(n.toLowerCase())>-1})},200)):this.combobox5.options=[]}},components:{codeBox:a.default}}},722:function(n,e,o){o(798);var t=o(2)(o(686),o(774),"data-v-b0bbbf4a",null);t.options.__file="/Users/jiangsijie/Documents/kyee_ui/demo/src/views/docs/business/combobox/src/main.vue",t.esModule&&Object.keys(t.esModule).some(function(n){return"default"!==n&&"__esModule"!==n})&&console.error("named exports are not supported in *.vue files."),t.options.functional&&console.error("[vue-loader] main.vue: functional components are not supported with templates, they should use render functions."),function(){var e=o(0);e.install(o(1),!1),e.compatible&&(n.hot.accept(),n.hot.data?e.reload("data-v-b0bbbf4a",t.options):e.createRecord("data-v-b0bbbf4a",t.options))}(),n.exports=t.exports},774:function(n,e,o){n.exports={render:function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("div",[o("h1",[n._v("Combobox 组合框")]),n._v(" "),o("p"),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[0].title,description:n.codeDemos[0].description,code:n.codeDemos[0].code,codeExplain:n.codeDemos[0].codeExplain}},[o("ky-combobox",{attrs:{config:n.combobox1.config},model:{value:n.combobox1.value,callback:function(e){n.combobox1.value=e},expression:"combobox1.value"}})],1),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[1].title,description:n.codeDemos[1].description,code:n.codeDemos[1].code,codeExplain:n.codeDemos[1].codeExplain}},[o("ky-combobox",{attrs:{config:n.combobox2.config},model:{value:n.combobox2.value,callback:function(e){n.combobox2.value=e},expression:"combobox2.value"}})],1),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[2].title,description:n.codeDemos[2].description,code:n.codeDemos[2].code,codeExplain:n.codeDemos[2].codeExplain}},[o("ky-combobox",{attrs:{config:n.combobox3.config},model:{value:n.combobox3.value,callback:function(e){n.combobox3.value=e},expression:"combobox3.value"}})],1),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[3].title,description:n.codeDemos[3].description,code:n.codeDemos[3].code,codeExplain:n.codeDemos[3].codeExplain}},[o("ky-combobox",{attrs:{config:n.combobox4.config},model:{value:n.combobox4.value,callback:function(e){n.combobox4.value=e},expression:"combobox4.value"}})],1),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[4].title,description:n.codeDemos[4].description,code:n.codeDemos[4].code,codeExplain:n.codeDemos[4].codeExplain}},[o("ky-select",{attrs:{filterable:"",remote:"","remote-method":n.remoteMethod,loading:n.combobox5.loading},model:{value:n.combobox5.value,callback:function(e){n.combobox5.value=e},expression:"combobox5.value"}},n._l(n.combobox5.options,function(n){return o("ky-option",{key:n.id,attrs:{label:n.text,value:n.id}})}))],1),n._v(" "),o("code-box",{attrs:{title:n.codeDemos[5].title,description:n.codeDemos[5].description,code:n.codeDemos[5].code,codeExplain:n.codeDemos[5].codeExplain}},[o("ky-combobox",{attrs:{config:n.combobox6.config},model:{value:n.combobox6.value,callback:function(e){n.combobox6.value=e},expression:"combobox6.value"}})],1),n._v(" "),o("h2",{staticClass:"combobox-des"},[n._v("Combobox Attribute")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.attribute}},[o("ky-table-column",{attrs:{prop:"params",label:"参数",width:"170"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"390"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"type",label:"类型"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"available_value",label:"可选值"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"default_value",label:"默认值"}})],1),n._v(" "),o("h2",{staticClass:"combobox-des"},[n._v("config Attributes")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.configAttributes}},[o("ky-table-column",{attrs:{prop:"params",label:"参数",width:"170"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"400"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"type",label:"类型"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"available_value",label:"可选值"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"default_value",label:"默认值"}})],1),n._v(" "),o("h2",{staticClass:"combobox-des"},[n._v("config Events")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.configEvents}},[o("ky-table-column",{attrs:{prop:"eventName",label:"事件名称",width:"170"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"350"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"cbParams",label:"回调参数"}})],1),n._v(" "),o("h2",{staticClass:"combobox-des"},[n._v("request Attributes")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.requestAttributes}},[o("ky-table-column",{attrs:{prop:"params",label:"参数",width:"200"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"370"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"type",label:"类型"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"available_value",label:"可选值"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"default_value",label:"默认值"}})],1),n._v(" "),o("h2",{staticClass:"combobox-des"},[n._v("request Events")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.requestEvents}},[o("ky-table-column",{attrs:{prop:"eventName",label:"事件名称",width:"170"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明",width:"350"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"cbParams",label:"回调参数"}})],1),n._v(" "),o("h2",[n._v("config Methods")]),n._v(" "),o("ky-table",{staticStyle:{width:"100%"},attrs:{data:n.configMethodsData}},[o("ky-table-column",{attrs:{prop:"methodsName",label:"方法名",width:"170"}}),n._v(" "),o("ky-table-column",{attrs:{prop:"mark",label:"说明"}})],1)],1)},staticRenderFns:[]},n.exports.render._withStripped=!0,n.hot.accept(),n.hot.data&&o(0).rerender("data-v-b0bbbf4a",n.exports)},798:function(n,e,o){var t=o(680);"string"==typeof t&&(t=[[n.i,t,""]]),t.locals&&(n.exports=t.locals);var a=o(4)("7bcb6d9e",t,!1);t.locals||n.hot.accept(680,function(){var e=o(680);"string"==typeof e&&(e=[[n.i,e,""]]),a(e)}),n.hot.dispose(function(){a()})}});